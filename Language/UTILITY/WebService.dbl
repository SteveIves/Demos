;*******************************************************************************
;
;Routine:		webservice
;
;Author:		Steve Ives (Synergex Professional Services Group)
;
;Platforms:		All Synergy-supported platforms
;
;Requirements:	Synergy/DE V8.1 or higher
;
;Revisions:		Version	Date			Comment
;				1.0		24 Jan 2003		Original version
;
;Disclaimer:	This code is supplied as seen and without warranty or support.
;				You may use and redistribute this code as you wish, but doing
;				so is entirely your own risk. Neither the author or Synergex
;				accept responsability for any loss or damage which may result
;				from the use of this code.
;
;This routine accepts parameters which provide the necessary information
;required to build a SOAP request and call an XML Web Service.
;
;DEALLOCATION OF THE STATIC DYNAMIC MEMORY ALLOCATED IN AND RETURNED FROM THIS
;ROUTINE IS THE RESPONSIBILITY OF THE CALLING ROUTINE.
;
.function WebService, ^VAL

	;Required parameters

	a_uri			,a					;Web service URI
	a_namespace		,a					;Web service namespace
	a_method		,a					;Name of method to call
	a_params		,n					;Number of parameters
	a_paramname		,[*]a				;Array of parameter names
	a_paramtype		,[*]n				;Array of parameter types
	a_paramdata		,[*]a				;Array of parameter values
	a_response		,n					;Returned response
	a_response_len	,n					;Length of returned response
	a_errtxt		,a					;Returned error text

	;Optional parameters
	a_logfile		,a					;Log file

.include "DBLDIR:synxml.def"
.include "UT:SoapRequest.def"

.align
record

	request			,i4					;Handle for HTTP request body
	request_len		,i4					;Length od HTTP request body
	headers			,[3]a80				;HTTP headers
	
	response		,i4					;Handle for HTTP response body
	response_len	,i4					;Length od HTTP response body
	
	error			,i4					;HTTP error
	errtxt			,a80				;HTTP error text
	
	logfile			,a80				;Log file name

;.define DEBUG

.proc

	;Build a SOAP

    request	= %SoapRequest(a_namespace,a_method,a_params,a_paramname,
	&							a_paramtype,a_paramdata,headers,request_len)

	;Display the request
	.ifdef DEBUG
	xcall u_msgbox(^m(request),,"SOAP Request to Web Service")
	.endc

	if ^passed(a_logfile)
		logfile = a_logfile

	;Call the XML web service
	error=%http_client_post(a_uri,,request,request_len,response,response_len,
	&							errtxt,headers,logfile)

	;Clean up after the request
	request = %mem_proc(DM_FREE,request)

	if (error) then
		a_errtxt = errtxt
	else
	begin	
		
		;Display the request
		.ifdef DEBUG
		xcall u_msgbox(^m(response),,"SOAP Response From Web Service")
		.endc

		a_response = %SoapResponse(response,response_len, a_response_len)
		clear a_errtxt
	end
		
	freturn error

.end


