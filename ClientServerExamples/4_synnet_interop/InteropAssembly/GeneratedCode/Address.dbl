;; ;; 
;; The contents of this file are auto-generated. Only add modifications to the end of this file.
;; Any modifications will be lost when the file is re-generated.
;; 
import System
import System.Text
namespace xfpldemo
 
;;; <summary>
;;; Structural Interface Class InteropAssemblyTmp
;;; </summary>
	{Serializable}
	public class Address
	 
		private f_Address_id    ,int
		 
		;;; <summary>
		;;; Address ID
		;;; </summary>
		public property Address_id   ,int
			method get
			proc
			    mreturn f_Address_id
			endmethod
			method set
			proc
				if(f_Address_id != value)
				begin
					m_changed = true 
					f_Address_id = value
				end
			endmethod
		endproperty
		private f_Customer_id    ,int
		 
		;;; <summary>
		;;; Customer ID
		;;; </summary>
		public property Customer_id   ,int
			method get
			proc
			    mreturn f_Customer_id
			endmethod
			method set
			proc
				if(f_Customer_id != value)
				begin
					m_changed = true 
					f_Customer_id = value
				end
			endmethod
		endproperty
		private f_Address_type    ,Address_type
		 
		;;; <summary>
		;;; Type of address
		;;; </summary>
		public property Address_type   ,Address_type
			method get
			proc
			    mreturn f_Address_type
			endmethod
			method set
			proc
				if(f_Address_type != value)
				begin
					m_changed = true 
					f_Address_type = value
				end
			endmethod
		endproperty
		private f_Address1    ,string
		 
		;;; <summary>
		;;; Address Line 1 - Number, Building
		;;; </summary>
		public property Address1   ,string
			method get
			proc
			    mreturn f_Address1
			endmethod
			method set
			proc
				if(f_Address1 != value)
				begin
					m_changed = true 
					f_Address1 = value
				end
			endmethod
		endproperty
		private f_Address2    ,string
		 
		;;; <summary>
		;;; Address Line 2 - Number, street
		;;; </summary>
		public property Address2   ,string
			method get
			proc
			    mreturn f_Address2
			endmethod
			method set
			proc
				if(f_Address2 != value)
				begin
					m_changed = true 
					f_Address2 = value
				end
			endmethod
		endproperty
		private f_Address3    ,string
		 
		;;; <summary>
		;;; Address Line 3 - Area, locality
		;;; </summary>
		public property Address3   ,string
			method get
			proc
			    mreturn f_Address3
			endmethod
			method set
			proc
				if(f_Address3 != value)
				begin
					m_changed = true 
					f_Address3 = value
				end
			endmethod
		endproperty
		private f_City    ,string
		 
		;;; <summary>
		;;; City
		;;; </summary>
		public property City   ,string
			method get
			proc
			    mreturn f_City
			endmethod
			method set
			proc
				if(f_City != value)
				begin
					m_changed = true 
					f_City = value
				end
			endmethod
		endproperty
		private f_Postal_code    ,string
		 
		;;; <summary>
		;;; Zip or Postal code
		;;; </summary>
		public property Postal_code   ,string
			method get
			proc
			    mreturn f_Postal_code
			endmethod
			method set
			proc
				if(f_Postal_code != value)
				begin
					m_changed = true 
					f_Postal_code = value
				end
			endmethod
		endproperty
		private f_State    ,string
		 
		;;; <summary>
		;;; State, Province or Country
		;;; </summary>
		public property State   ,string
			method get
			proc
			    mreturn f_State
			endmethod
			method set
			proc
				if(f_State != value)
				begin
					m_changed = true 
					f_State = value
				end
			endmethod
		endproperty
		private f_Country    ,string
		 
		;;; <summary>
		;;; Country
		;;; </summary>
		public property Country   ,string
			method get
			proc
			    mreturn f_Country
			endmethod
			method set
			proc
				if(f_Country != value)
				begin
					m_changed = true 
					f_Country = value
				end
			endmethod
		endproperty
		private f_Mailing_address    ,boolean
		 
		;;; <summary>
		;;; This is a mailing address
		;;; </summary>
		public property Mailing_address   ,boolean
			method get
			proc
			    mreturn f_Mailing_address
			endmethod
			method set
			proc
				if(f_Mailing_address != value)
				begin
					m_changed = true 
					f_Mailing_address = value
				end
			endmethod
		endproperty
		private f_Billing_address    ,boolean
		 
		;;; <summary>
		;;; This is a billing address
		;;; </summary>
		public property Billing_address   ,boolean
			method get
			proc
			    mreturn f_Billing_address
			endmethod
			method set
			proc
				if(f_Billing_address != value)
				begin
					m_changed = true 
					f_Billing_address = value
				end
			endmethod
		endproperty
		private f_Main_address    ,boolean
		 
		;;; <summary>
		;;; This is the main office address
		;;; </summary>
		public property Main_address   ,boolean
			method get
			proc
			    mreturn f_Main_address
			endmethod
			method set
			proc
				if(f_Main_address != value)
				begin
					m_changed = true 
					f_Main_address = value
				end
			endmethod
		endproperty
		private f_Satellite_office    ,boolean
		 
		;;; <summary>
		;;; This is a satellite office address
		;;; </summary>
		public property Satellite_office   ,boolean
			method get
			proc
			    mreturn f_Satellite_office
			endmethod
			method set
			proc
				if(f_Satellite_office != value)
				begin
					m_changed = true 
					f_Satellite_office = value
				end
			endmethod
		endproperty
		private f_Active_date    ,System.DateTime
		 
		;;; <summary>
		;;; Date address became active
		;;; </summary>
		public property Active_date   ,System.DateTime
			method get
			proc
			    mreturn f_Active_date
			endmethod
			method set
			proc
				if(f_Active_date != value)
				begin
					m_changed = true 
					f_Active_date = value
				end
			endmethod
		endproperty
		private f_Replication_key    ,string
		 
		;;; <summary>
		;;; SQL Replication Timestamp
		;;; </summary>
		public property Replication_key   ,string
			method get
			proc
			    mreturn f_Replication_key
			endmethod
			method set
			proc
				if(f_Replication_key != value)
				begin
					m_changed = true 
					f_Replication_key = value
				end
			endmethod
		endproperty
		;;; <summary>
		;;; structure clone
		;;; </summary>
		public method Clone    ,@xfpldemo.Address
		endparams
		proc
			data tmp = new xfpldemo.Address()
			tmp.f_Address_id = this.f_Address_id
			tmp.f_Customer_id = this.f_Customer_id
			tmp.f_Address_type = this.f_Address_type
			tmp.f_Address1 = this.f_Address1
			tmp.f_Address2 = this.f_Address2
			tmp.f_Address3 = this.f_Address3
			tmp.f_City = this.f_City
			tmp.f_Postal_code = this.f_Postal_code
			tmp.f_State = this.f_State
			tmp.f_Country = this.f_Country
			tmp.f_Mailing_address = this.f_Mailing_address
			tmp.f_Billing_address = this.f_Billing_address
			tmp.f_Main_address = this.f_Main_address
			tmp.f_Satellite_office = this.f_Satellite_office
			tmp.f_Active_date = this.f_Active_date
			tmp.f_Replication_key = this.f_Replication_key
			mreturn tmp
		endmethod
		private f_original    ,@xfpldemo.Address
		;;; <summary>
		;;; Used to store a copy of the original structure
		;;; </summary>
		public property Original,  @xfpldemo.Address
			method get
			proc
				mreturn f_original
			endmethod
			method set
			proc
				f_original = value
			endmethod
			endproperty
		;;; <summary>
		;;; structure equals
		;;; </summary>
		public method Equals,   boolean
			str    ,@xfpldemo.Address
		endparams
		proc
			if (this.Address_id != str.Address_id)
				mreturn false
			if (this.Customer_id != str.Customer_id)
				mreturn false
			if (this.Address_type != str.Address_type)
				mreturn false
			if (this.Address1 != str.Address1)
				mreturn false
			if (this.Address2 != str.Address2)
				mreturn false
			if (this.Address3 != str.Address3)
				mreturn false
			if (this.City != str.City)
				mreturn false
			if (this.Postal_code != str.Postal_code)
				mreturn false
			if (this.State != str.State)
				mreturn false
			if (this.Country != str.Country)
				mreturn false
			if (this.Mailing_address != str.Mailing_address)
				mreturn false
			if (this.Billing_address != str.Billing_address)
				mreturn false
			if (this.Main_address != str.Main_address)
				mreturn false
			if (this.Satellite_office != str.Satellite_office)
				mreturn false
			if (this.Active_date != str.Active_date)
				mreturn false
			if (this.Replication_key != str.Replication_key)
				mreturn false
			mreturn true
		endmethod
 
		private m_changed    ,boolean, false
 
		;;; <summary>
		;;; Structure Changed 
		;;; </summary>
		;;; <returns>true if structure has been changed</returns>
		public property Changed    ,boolean
			method get
			proc
			    mreturn m_changed
		endmethod
		endproperty
 
		;;; <summary>
		;;; Serialize a structure to a string
		;;; </summary>
		public method StructToSynergy,    A
		endparams
		record Tmp_Address
			tAddress_id    ,i4
			tCustomer_id    ,i4
			tAddress_type    ,^global.Address_type
			tAddress1    ,a50
			tAddress2    ,a50
			tAddress3    ,a50
			tCity    ,a30
			tPostal_code    ,a10
			tState    ,a2
			tCountry    ,a2
			tMailing_address    ,d4
			tBilling_address    ,d4
			tMain_address    ,d4
			tSatellite_office    ,d4
			tActive_date    ,d8
			tReplication_key    ,a20
		endrecord
		proc
			Tmp_Address.tAddress_id = this.Address_id
			Tmp_Address.tCustomer_id = this.Customer_id
			Tmp_Address.tAddress_type = (^global.Address_type)(int)this.Address_type
			Tmp_Address.tAddress1 = this.Address1
			Tmp_Address.tAddress2 = this.Address2
			Tmp_Address.tAddress3 = this.Address3
			Tmp_Address.tCity = this.City
			Tmp_Address.tPostal_code = this.Postal_code
			Tmp_Address.tState = this.State
			Tmp_Address.tCountry = this.Country
			Tmp_Address.tMailing_address = this.Mailing_address
			Tmp_Address.tBilling_address = this.Billing_address
			Tmp_Address.tMain_address = this.Main_address
			Tmp_Address.tSatellite_office = this.Satellite_office
			Tmp_Address.tActive_date = %DateTimeToDec(this.Active_date,"YYYYMMDD")
			Tmp_Address.tReplication_key = this.Replication_key
			mreturn Tmp_Address
		endmethod
		;;; <summary>
		;;; Serialize a Synergy structure to a .NET structure
		;;; </summary>
		public method SynergyToStruct,    void 
			structIn    ,a
		endparams
		record Tmp_Address
			tAddress_id    ,i4
			tCustomer_id    ,i4
			tAddress_type    ,^global.Address_type
			tAddress1    ,a50
			tAddress2    ,a50
			tAddress3    ,a50
			tCity    ,a30
			tPostal_code    ,a10
			tState    ,a2
			tCountry    ,a2
			tMailing_address    ,d4
			tBilling_address    ,d4
			tMain_address    ,d4
			tSatellite_office    ,d4
			tActive_date    ,d8
			tReplication_key    ,a20
		endrecord
		proc
			Tmp_Address = structIn
			f_Address_id = Tmp_Address.tAddress_id
			f_Customer_id = Tmp_Address.tCustomer_id
			f_Address_type = (Address_type)%integer(Tmp_Address.tAddress_type)
			f_Address1 = %atrim(Tmp_Address.tAddress1)
			f_Address2 = %atrim(Tmp_Address.tAddress2)
			f_Address3 = %atrim(Tmp_Address.tAddress3)
			f_City = %atrim(Tmp_Address.tCity)
			f_Postal_code = %atrim(Tmp_Address.tPostal_code)
			f_State = %atrim(Tmp_Address.tState)
			f_Country = %atrim(Tmp_Address.tCountry)
			f_Mailing_address = Tmp_Address.tMailing_address
			f_Billing_address = Tmp_Address.tBilling_address
			f_Main_address = Tmp_Address.tMain_address
			f_Satellite_office = Tmp_Address.tSatellite_office
			f_Active_date = new System.DateTime(%DecToDateTime(Tmp_Address.tActive_date, "YYYYMMDD"))
			f_Replication_key = %atrim(Tmp_Address.tReplication_key)
			mreturn
		endmethod
	endclass
endnamespace
