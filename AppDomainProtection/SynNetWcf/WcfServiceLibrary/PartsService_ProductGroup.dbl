;;******************************************************************************
;; WARNING: THIS FILE WAS CODE GENERATED. CHANGES MAY BE LOST IF REGENERATED
;;******************************************************************************

import System
import System.Collections.Generic
import System.Runtime.Serialization
import System.ServiceModel
import System.Threading.Tasks
import AppDomainProtection
import PartsSystem

namespace WcfServiceLibrary

    public partial class PartsService

        public method CreateProductGroup, @Task<MethodStatus>
            required in aProductGroup, @ProductGroup
        proc
            data completionSource = new TaskCompletionSource<MethodStatus>()
            lambda curryParams()
            begin
                data api, @PartsSystemAPI, new PartsSystemAPI()
                completionSource.SetResult(api.CreateProductGroup(aProductGroup))
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method ReadProductGroup, @Task<ProductGroupReadResponse>
            required in  aGroupId, string
            endparams
        proc
            data completionSource = new TaskCompletionSource<ProductGroupReadResponse>()
            lambda curryParams()
            begin
                data api, @PartsSystemAPI, new PartsSystemAPI()
                data tmpProductGroup, @ProductGroup
                data tmpGrfa, String
                completionSource.SetResult(new ProductGroupReadResponse() { Status = api.ReadProductGroup(aGroupId,tmpProductGroup,tmpGrfa), Result = tmpProductGroup, Grfa = tmpGrfa } )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method ReadAllProductGroups, @Task<ProductGroupReadAllResponse>
            endparams
        proc
            data completionSource = new TaskCompletionSource<ProductGroupReadAllResponse>()
            lambda curryParams()
            begin
                data api, @PartsSystemAPI, new PartsSystemAPI()
                data tmpProductGroups, @List<ProductGroup>
                completionSource.SetResult(new ProductGroupReadAllResponse() {Status = api.ReadAllProductGroups(tmpProductGroups), Result = tmpProductGroups} )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method UpdateProductGroup, @Task<ProductGroupUpdateResponse>
            required in aProductGroup, @ProductGroup
            required in aGrfa, String
            endparams
        proc
            data completionSource = new TaskCompletionSource<ProductGroupUpdateResponse>()
            data tmpProductGroup, @ProductGroup, aProductGroup
            data tmpGrfa, String, aGrfa
            lambda curryParams()
            begin
                data api, @PartsSystemAPI, new PartsSystemAPI()
                completionSource.SetResult(new ProductGroupUpdateResponse() {Status = api.UpdateProductGroup(tmpProductGroup,tmpGrfa), Result = tmpProductGroup, Grfa = tmpGrfa} )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method DeleteProductGroup, @Task<MethodStatus>
            required in aGrfa, String
            endparams
        proc
            data completionSource = new TaskCompletionSource<MethodStatus>()
            lambda curryParams()
            begin
                data api, @PartsSystemAPI, new PartsSystemAPI()
                completionSource.SetResult(api.DeleteProductGroup(aGrfa))
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method ProductGroupExists, @Task<MethodStatus>
            required in aGroupId, string
            endparams
        proc
            data completionSource = new TaskCompletionSource<MethodStatus>()
            lambda curryParams()
            begin
                data api, @PartsSystemAPI, new PartsSystemAPI()
                completionSource.SetResult(api.ProductGroupExists(aGroupId))
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

    endclass

endnamespace
