;;******************************************************************************
;; WARNING: THIS FILE WAS CODE GENERATED. CHANGES MAY BE LOST IF REGENERATED
;;******************************************************************************

import System
import System.Collections.Generic
import System.Runtime.Serialization
import System.ServiceModel
import System.Threading.Tasks
import AppDomainProtection
import PartsSystem

namespace WcfServiceLibrary

    public partial class PartsService

        public method CreatePart, @Task<PartsServiceResponse>
            required in aPart, @Part
        proc
            data completionSource = new TaskCompletionSource<PartsServiceResponse>()
            lambda curryParams()
            begin
                data tmpErrorMessage, string
                data api = new PartsSystemAPI()
                completionSource.SetResult(new PartsServiceResponse() { Status = api.CreatePart(aPart,tmpErrorMessage), ErrorMessage = tmpErrorMessage } )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method ReadPart, @Task<PartReadResponse>
            required in  aId, string
            endparams
        proc
            data completionSource = new TaskCompletionSource<PartReadResponse>()
            lambda curryParams()
            begin
                data tmpPart, @Part
                data tmpGrfa, [#]byte
                data tmpErrorMessage, string
                data api = new PartsSystemAPI()
                ;------
                ;TODO: Compiler Bug: Type mismatch between System.Byte and System.Byte!
                ;completionSource.SetResult(new PartReadResponse() { Status = api.ReadPart(aId,tmpPart,tmpGrfa,tmpErrorMessage), ErrorMessage = tmpErrorMessage, Result = tmpPart, Grfa = tmpGrfa } )
                ;------
                ;WORKAROUND:
                data r = new PartReadResponse()
                r.Status = api.ReadPart(aId,tmpPart,tmpGrfa,tmpErrorMessage)
                r.ErrorMessage = tmpErrorMessage
                r.Result = tmpPart
                r.Grfa = tmpGrfa
                completionSource.SetResult(r)
                ;------
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method ReadAllParts, @Task<PartReadAllResponse>
            endparams
        proc
            data completionSource = new TaskCompletionSource<PartReadAllResponse>()
            lambda curryParams()
            begin
                data tmpParts, @List<Part>
                data tmpErrorMessage, string
                data api = new PartsSystemAPI()
                completionSource.SetResult(new PartReadAllResponse() { Status = api.ReadAllParts(tmpParts,tmpErrorMessage), ErrorMessage = tmpErrorMessage, Result = tmpParts} )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method UpdatePart, @Task<PartUpdateResponse>
            required in aPart, @Part
            required in aGrfa, [#]byte
            endparams
        proc
            data completionSource = new TaskCompletionSource<PartUpdateResponse>()
            lambda curryParams()
            begin
                data tmpPart, @Part, aPart
                data tmpGrfa, [#]byte, aGrfa
                data tmpErrorMessage, string
                data api = new PartsSystemAPI()
                ;------
                ;TODO: Compiler Bug: Type mismatch between System.Byte and System.Byte!
                ;completionSource.SetResult(new PartUpdateResponse() { Status = api.UpdatePart(tmpPart,tmpGrfa,tmpErrorMessage), ErrorMessage = tmpErrorMessage, Result = tmpPart, Grfa = tmpGrfa} )
                ;------
                ;WORKAROUND:
                data r = new PartUpdateResponse()
                r.Status = api.UpdatePart(tmpPart,tmpGrfa,tmpErrorMessage)
                r.ErrorMessage = tmpErrorMessage
                r.Result = tmpPart
                r.Grfa = tmpGrfa
                completionSource.SetResult(r)
                ;------
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method DeletePart, @Task<PartsServiceResponse>
            required in aGrfa, [#]byte
            endparams
        proc
            data completionSource = new TaskCompletionSource<PartsServiceResponse>()
            lambda curryParams()
            begin
                data tmpErrorMessage, string
                data api = new PartsSystemAPI()
                completionSource.SetResult(new PartsServiceResponse() { Status = api.DeletePart(aGrfa,tmpErrorMessage), ErrorMessage = tmpErrorMessage } )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

        public method PartExists, @Task<PartsServiceResponse>
            required in aId, string
            endparams
        proc
            data completionSource = new TaskCompletionSource<PartsServiceResponse>()
            lambda curryParams()
            begin
                data tmpErrorMessage, string
                data api = new PartsSystemAPI()
                completionSource.SetResult(new PartsServiceResponse() { Status = api.PartExists(aId,tmpErrorMessage), ErrorMessage = tmpErrorMessage } )
            end
            this.ServiceDispatcher.Dispatch(curryParams)
            mreturn completionSource.Task
        endmethod

    endclass

endnamespace
