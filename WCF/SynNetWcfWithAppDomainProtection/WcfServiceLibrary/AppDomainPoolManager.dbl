
import System
import System.Collections.Generic

import System.Threading
namespace WcfServiceLibrary

    public static class AppDomainPoolManager
    
        private static pool, @List<AppDomain>

        static method AppDomainPoolManager
            endparams
        proc
            pool = new List<AppDomain>()
        endmethod

        public static method Allocate, @AppDomain
            endparams
        proc
            data ad, @AppDomain
			try
			begin
				Monitor.Enter(^typeof(AppDomainPoolManager))
				if (pool.Count>0)
				begin
					ad = pool[0]
					pool.RemoveAt(0)
				end
			end
			finally
			begin
				Monitor.Exit(^typeof(AppDomainPoolManager))
			end
			endtry
			if (ad==^null)
				ad = AppDomain.CreateDomain(Guid.NewGuid().ToString())
			mreturn ad
        endmethod

        public static method Release, void
            required inout ad, @AppDomain
            endparams
        proc
			try
			begin
				Monitor.Enter(^typeof(AppDomainPoolManager))
				pool.Add(ad)
				ad = ^null
			end
			finally
			begin
				Monitor.Exit(^typeof(AppDomainPoolManager))
			end
			endtry
        endmethod

    endclass

endnamespace

