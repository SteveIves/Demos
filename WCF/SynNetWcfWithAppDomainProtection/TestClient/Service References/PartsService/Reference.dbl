import System
import System.Runtime.Serialization

.array 0
namespace TestClient.PartsService

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")}
	{System.Runtime.Serialization.DataContractAttribute(Name = "Part", Namespace = "http://schemas.datacontract.org/2004/07/PartsSystem")}
	{System.SerializableAttribute()}
	public partial class Part inherits System.Object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged

		{System.NonSerializedAttribute()}
		private extensionDataField, @System.Runtime.Serialization.ExtensionDataObject

		{System.ComponentModel.BrowsableAttribute(false)}
		public property ExtensionData, @System.Runtime.Serialization.ExtensionDataObject
			method get
			proc
				mreturn this.extensionDataField
			endmethod
			method set
			proc
				this.extensionDataField = value
			endmethod
		endproperty

		public virtual event PropertyChanged, @System.ComponentModel.PropertyChangedEventHandler

		protected method RaisePropertyChanged, void
			propertyName, string 
			endparams
		proc
			data propertyChanged, @System.ComponentModel.PropertyChangedEventHandler, this.PropertyChanged
			if (propertyChanged != ^null)
				propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName))
		endmethod

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private CostPriceField, System.Decimal

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property CostPrice, System.Decimal
			method get
			proc
				mreturn this.CostPriceField
			endmethod
			method set
			proc
				if ((this.CostPriceField == value) != true)
				begin
					this.CostPriceField = value
					this.RaisePropertyChanged("CostPrice")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private DescriptionField, string

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property Description, string
			method get
			proc
				mreturn this.DescriptionField
			endmethod
			method set
			proc
				if (System.Object.ReferenceEquals(this.DescriptionField, value) != true)
				begin
					this.DescriptionField = value
					this.RaisePropertyChanged("Description")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private GroupidField, string

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property Groupid, string
			method get
			proc
				mreturn this.GroupidField
			endmethod
			method set
			proc
				if (System.Object.ReferenceEquals(this.GroupidField, value) != true)
				begin
					this.GroupidField = value
					this.RaisePropertyChanged("Groupid")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private IdField, string

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property Id, string
			method get
			proc
				mreturn this.IdField
			endmethod
			method set
			proc
				if (System.Object.ReferenceEquals(this.IdField, value) != true)
				begin
					this.IdField = value
					this.RaisePropertyChanged("Id")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private QuantityField, int

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property Quantity, int
			method get
			proc
				mreturn this.QuantityField
			endmethod
			method set
			proc
				if ((this.QuantityField == value) != true)
				begin
					this.QuantityField = value
					this.RaisePropertyChanged("Quantity")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private SpareField, string

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property Spare, string
			method get
			proc
				mreturn this.SpareField
			endmethod
			method set
			proc
				if (System.Object.ReferenceEquals(this.SpareField, value) != true)
				begin
					this.SpareField = value
					this.RaisePropertyChanged("Spare")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private SupplieridField, string

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property Supplierid, string
			method get
			proc
				mreturn this.SupplieridField
			endmethod
			method set
			proc
				if (System.Object.ReferenceEquals(this.SupplieridField, value) != true)
				begin
					this.SupplieridField = value
					this.RaisePropertyChanged("Supplierid")
				end
			endmethod
		endproperty

		{System.Runtime.Serialization.OptionalFieldAttribute()}
		private TechnicalInfoField, string

		{System.Runtime.Serialization.DataMemberAttribute()}
		public property TechnicalInfo, string
			method get
			proc
				mreturn this.TechnicalInfoField
			endmethod
			method set
			proc
				if (System.Object.ReferenceEquals(this.TechnicalInfoField, value) != true)
				begin
					this.TechnicalInfoField = value
					this.RaisePropertyChanged("TechnicalInfo")
				end
			endmethod
		endproperty
	endclass

	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")}
	{System.Runtime.Serialization.DataContractAttribute(Name = "MethodStatus", Namespace = "http://schemas.datacontract.org/2004/07/PartsSystem")}
	public enum MethodStatus
		{System.Runtime.Serialization.EnumMemberAttribute()}
		Success
		{System.Runtime.Serialization.EnumMemberAttribute()}
		Fail
		{System.Runtime.Serialization.EnumMemberAttribute()}
		FatalError
	endenum

	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.ServiceContractAttribute(ConfigurationName = "PartsService.IPartsService", SessionMode = System.ServiceModel.SessionMode.Required)}
	public interface IPartsService

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/CreatePart", ReplyAction = "http://tempuri.org/IPartsService/CreatePartResponse")}
		method CreatePart, TestClient.PartsService.MethodStatus
			aPart, @TestClient.PartsService.Part 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/CreatePart", ReplyAction = "http://tempuri.org/IPartsService/CreatePartResponse")}
		method CreatePartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.MethodStatus>
			aPart, @TestClient.PartsService.Part 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/ReadPart", ReplyAction = "http://tempuri.org/IPartsService/ReadPartResponse")}
		method ReadPart, @TestClient.PartsService.ReadPartResponse
			request, @TestClient.PartsService.ReadPartRequest 
			endparams
		endmethod

;; CODEGEN: Generating message contract since the operation has multiple return values.
		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/ReadPart", ReplyAction = "http://tempuri.org/IPartsService/ReadPartResponse")}
		method ReadPartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.ReadPartResponse>
			request, @TestClient.PartsService.ReadPartRequest 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/ReadAllParts", ReplyAction = "http://tempuri.org/IPartsService/ReadAllPartsResponse")}
		method ReadAllParts, @TestClient.PartsService.ReadAllPartsResponse
			request, @TestClient.PartsService.ReadAllPartsRequest 
			endparams
		endmethod

;; CODEGEN: Generating message contract since the operation has multiple return values.
		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/ReadAllParts", ReplyAction = "http://tempuri.org/IPartsService/ReadAllPartsResponse")}
		method ReadAllPartsAsync, @System.Threading.Tasks.Task<TestClient.PartsService.ReadAllPartsResponse>
			request, @TestClient.PartsService.ReadAllPartsRequest 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/UpdatePart", ReplyAction = "http://tempuri.org/IPartsService/UpdatePartResponse")}
		method UpdatePart, @TestClient.PartsService.UpdatePartResponse
			request, @TestClient.PartsService.UpdatePartRequest 
			endparams
		endmethod

;; CODEGEN: Generating message contract since the operation has multiple return values.
		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/UpdatePart", ReplyAction = "http://tempuri.org/IPartsService/UpdatePartResponse")}
		method UpdatePartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.UpdatePartResponse>
			request, @TestClient.PartsService.UpdatePartRequest 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/DeletePart", ReplyAction = "http://tempuri.org/IPartsService/DeletePartResponse")}
		method DeletePart, TestClient.PartsService.MethodStatus
			aGrfa, string 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/DeletePart", ReplyAction = "http://tempuri.org/IPartsService/DeletePartResponse")}
		method DeletePartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.MethodStatus>
			aGrfa, string 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/PartExists", ReplyAction = "http://tempuri.org/IPartsService/PartExistsResponse")}
		method PartExists, TestClient.PartsService.MethodStatus
			aId, string 
			endparams
		endmethod

		{System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPartsService/PartExists", ReplyAction = "http://tempuri.org/IPartsService/PartExistsResponse")}
		method PartExistsAsync, @System.Threading.Tasks.Task<TestClient.PartsService.MethodStatus>
			aId, string 
			endparams
		endmethod
	endinterface

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.MessageContractAttribute(WrapperName = "ReadPart", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)}
	public partial class ReadPartRequest

		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)}
		public aId, string

		public method ReadPartRequest
			endparams
		proc

		endmethod

		public method ReadPartRequest
			aId, string 
			endparams
		proc
			this.aId = aId
		endmethod
	endclass

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.MessageContractAttribute(WrapperName = "ReadPartResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)}
	public partial class ReadPartResponse

		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)}
		public ReadPartResult, TestClient.PartsService.MethodStatus
		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)}
		public aPart, @TestClient.PartsService.Part
		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)}
		public aGrfa, string

		public method ReadPartResponse
			endparams
		proc

		endmethod

		public method ReadPartResponse
			ReadPartResult, TestClient.PartsService.MethodStatus 
			aPart, @TestClient.PartsService.Part 
			aGrfa, string 
			endparams
		proc
			this.ReadPartResult = ReadPartResult
			this.aPart = aPart
			this.aGrfa = aGrfa
		endmethod
	endclass

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.MessageContractAttribute(WrapperName = "ReadAllParts", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)}
	public partial class ReadAllPartsRequest

		public method ReadAllPartsRequest
			endparams
		proc

		endmethod
	endclass

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.MessageContractAttribute(WrapperName = "ReadAllPartsResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)}
	public partial class ReadAllPartsResponse

		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)}
		public ReadAllPartsResult, TestClient.PartsService.MethodStatus
		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)}
		public aParts, @System.Collections.ObjectModel.ObservableCollection<TestClient.PartsService.Part>

		public method ReadAllPartsResponse
			endparams
		proc

		endmethod

		public method ReadAllPartsResponse
			ReadAllPartsResult, TestClient.PartsService.MethodStatus 
			aParts, @System.Collections.ObjectModel.ObservableCollection<TestClient.PartsService.Part> 
			endparams
		proc
			this.ReadAllPartsResult = ReadAllPartsResult
			this.aParts = aParts
		endmethod
	endclass

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.MessageContractAttribute(WrapperName = "UpdatePart", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)}
	public partial class UpdatePartRequest

		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)}
		public aPart, @TestClient.PartsService.Part
		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)}
		public aGrfa, string

		public method UpdatePartRequest
			endparams
		proc

		endmethod

		public method UpdatePartRequest
			aPart, @TestClient.PartsService.Part 
			aGrfa, string 
			endparams
		proc
			this.aPart = aPart
			this.aGrfa = aGrfa
		endmethod
	endclass

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	{System.ServiceModel.MessageContractAttribute(WrapperName = "UpdatePartResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)}
	public partial class UpdatePartResponse

		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)}
		public UpdatePartResult, TestClient.PartsService.MethodStatus
		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)}
		public aPart, @TestClient.PartsService.Part
		{System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)}
		public aGrfa, string

		public method UpdatePartResponse
			endparams
		proc

		endmethod

		public method UpdatePartResponse
			UpdatePartResult, TestClient.PartsService.MethodStatus 
			aPart, @TestClient.PartsService.Part 
			aGrfa, string 
			endparams
		proc
			this.UpdatePartResult = UpdatePartResult
			this.aPart = aPart
			this.aGrfa = aGrfa
		endmethod
	endclass

	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	public interface IPartsServiceChannel extends TestClient.PartsService.IPartsService, System.ServiceModel.IClientChannel
	endinterface

	{System.Diagnostics.DebuggerStepThroughAttribute()}
	{System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")}
	public partial class PartsServiceClient inherits System.ServiceModel.ClientBase<TestClient.PartsService.IPartsService>, TestClient.PartsService.IPartsService

		public method PartsServiceClient
			endparams
		proc

		endmethod

		public method PartsServiceClient
			endpointConfigurationName, string 
			endparams
			parent(endpointConfigurationName)
		proc

		endmethod

		public method PartsServiceClient
			endpointConfigurationName, string 
			remoteAddress, string 
			endparams
			parent(endpointConfigurationName, remoteAddress)
		proc

		endmethod

		public method PartsServiceClient
			endpointConfigurationName, string 
			remoteAddress, @System.ServiceModel.EndpointAddress 
			endparams
			parent(endpointConfigurationName, remoteAddress)
		proc

		endmethod

		public method PartsServiceClient
			binding, @System.ServiceModel.Channels.Binding 
			remoteAddress, @System.ServiceModel.EndpointAddress 
			endparams
			parent(binding, remoteAddress)
		proc

		endmethod

		public method CreatePart, TestClient.PartsService.MethodStatus
			aPart, @TestClient.PartsService.Part 
			endparams
		proc
			mreturn parent.Channel.CreatePart(aPart)
		endmethod

		public method CreatePartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.MethodStatus>
			aPart, @TestClient.PartsService.Part 
			endparams
		proc
			mreturn parent.Channel.CreatePartAsync(aPart)
		endmethod

		{System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)}
		public method TestClient.PartsService.IPartsService.ReadPart, @TestClient.PartsService.ReadPartResponse
			request, @TestClient.PartsService.ReadPartRequest 
			endparams
		proc
			mreturn parent.Channel.ReadPart(request)
		endmethod

		public method ReadPart, TestClient.PartsService.MethodStatus
			aId, string 
			out aPart, @TestClient.PartsService.Part 
			out aGrfa, string 
			endparams
		proc
			data inValue, @TestClient.PartsService.ReadPartRequest, new TestClient.PartsService.ReadPartRequest()
			inValue.aId = aId
			data retVal, @TestClient.PartsService.ReadPartResponse, ((@TestClient.PartsService.IPartsService)this).ReadPart(inValue)
			aPart = retVal.aPart
			aGrfa = retVal.aGrfa
			mreturn retVal.ReadPartResult
		endmethod

		public method ReadPartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.ReadPartResponse>
			request, @TestClient.PartsService.ReadPartRequest 
			endparams
		proc
			mreturn parent.Channel.ReadPartAsync(request)
		endmethod

		{System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)}
		public method TestClient.PartsService.IPartsService.ReadAllParts, @TestClient.PartsService.ReadAllPartsResponse
			request, @TestClient.PartsService.ReadAllPartsRequest 
			endparams
		proc
			mreturn parent.Channel.ReadAllParts(request)
		endmethod

		public method ReadAllParts, TestClient.PartsService.MethodStatus
			out aParts, @System.Collections.ObjectModel.ObservableCollection<TestClient.PartsService.Part> 
			endparams
		proc
			data inValue, @TestClient.PartsService.ReadAllPartsRequest, new TestClient.PartsService.ReadAllPartsRequest()
			data retVal, @TestClient.PartsService.ReadAllPartsResponse, ((@TestClient.PartsService.IPartsService)this).ReadAllParts(inValue)
			aParts = retVal.aParts
			mreturn retVal.ReadAllPartsResult
		endmethod

		public method ReadAllPartsAsync, @System.Threading.Tasks.Task<TestClient.PartsService.ReadAllPartsResponse>
			request, @TestClient.PartsService.ReadAllPartsRequest 
			endparams
		proc
			mreturn parent.Channel.ReadAllPartsAsync(request)
		endmethod

		{System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)}
		public method TestClient.PartsService.IPartsService.UpdatePart, @TestClient.PartsService.UpdatePartResponse
			request, @TestClient.PartsService.UpdatePartRequest 
			endparams
		proc
			mreturn parent.Channel.UpdatePart(request)
		endmethod

		public method UpdatePart, TestClient.PartsService.MethodStatus
			byref inout aPart, @TestClient.PartsService.Part 
			byref inout aGrfa, string 
			endparams
		proc
			data inValue, @TestClient.PartsService.UpdatePartRequest, new TestClient.PartsService.UpdatePartRequest()
			inValue.aPart = aPart
			inValue.aGrfa = aGrfa
			data retVal, @TestClient.PartsService.UpdatePartResponse, ((@TestClient.PartsService.IPartsService)this).UpdatePart(inValue)
			aPart = retVal.aPart
			aGrfa = retVal.aGrfa
			mreturn retVal.UpdatePartResult
		endmethod

		public method UpdatePartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.UpdatePartResponse>
			request, @TestClient.PartsService.UpdatePartRequest 
			endparams
		proc
			mreturn parent.Channel.UpdatePartAsync(request)
		endmethod

		public method DeletePart, TestClient.PartsService.MethodStatus
			aGrfa, string 
			endparams
		proc
			mreturn parent.Channel.DeletePart(aGrfa)
		endmethod

		public method DeletePartAsync, @System.Threading.Tasks.Task<TestClient.PartsService.MethodStatus>
			aGrfa, string 
			endparams
		proc
			mreturn parent.Channel.DeletePartAsync(aGrfa)
		endmethod

		public method PartExists, TestClient.PartsService.MethodStatus
			aId, string 
			endparams
		proc
			mreturn parent.Channel.PartExists(aId)
		endmethod

		public method PartExistsAsync, @System.Threading.Tasks.Task<TestClient.PartsService.MethodStatus>
			aId, string 
			endparams
		proc
			mreturn parent.Channel.PartExistsAsync(aId)
		endmethod
	endclass
endnamespace

