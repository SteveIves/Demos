
import System
import System.Collections.Generic
import System.Net
import System.Runtime.Serialization
import System.Runtime.Serialization.Json

import DataContracts

namespace ClientApp
	
	
	public static class ServiceAPI
		
		public enum WebDataFormat
			XML
			JSON
		endenum

		public static log, @System.Windows.Forms.TextBox

		private static baseURI, String, "http://localhost:5320/Customers"
		private static mDataFormat, WebDataFormat, WebDataFormat.JSON

		public static property DataFormat, WebDataFormat
			method get
			proc
				mreturn mDataFormat
			endmethod
			method set
			proc
				mDataFormat = value
			endmethod
		endproperty
		
		public static method GetCustomers, @List<Customer>
			endparams
		proc
			using DataFormat select
			(WebDataFormat.XML),
			begin
				data serializer = new DataContractSerializer(^typeof(List<Customer>))
				mreturn (@List<Customer>)serializer.ReadObject(restServiceGET("").GetResponseStream())
			end
			(WebDataFormat.JSON),
			begin
				data serializer = new DataContractJsonSerializer(^typeof(List<Customer>))
				mreturn (@List<Customer>)serializer.ReadObject(restServiceGET("").GetResponseStream())
			end
			(),
				mreturn new List<Customer>()
			endusing
		endmethod
		
		public static method GetCustomer, @Customer
			required in customerId, int
			endparams
		proc
			using DataFormat select
			(WebDataFormat.XML),
			begin
				data serializer = new DataContractSerializer(^typeof(Customer))
				mreturn (@Customer)serializer.ReadObject(restServiceGET(customerId.ToString()).GetResponseStream())
			end
			(WebDataFormat.JSON),
			begin
				data serializer = new DataContractJsonSerializer(^typeof(Customer))
				mreturn (@Customer)serializer.ReadObject(restServiceGET(customerId.ToString()).GetResponseStream())
			end
			(),
				mreturn new Customer()
			endusing
		endmethod

		public static method GetContacts, @List<Contact>
			required in aCustomerId, int
			endparams
		proc
			data requestURI, String, String.Format("{0}/Contacts",aCustomerId)
			using DataFormat select
			(WebDataFormat.XML),
			begin
				data serializer = new DataContractSerializer(^typeof(List<Contact>))
				mreturn (@List<Contact>)serializer.ReadObject(restServiceGET(requestURI).GetResponseStream())
			end
			(WebDataFormat.JSON),
			begin
				data serializer = new DataContractJsonSerializer(^typeof(List<Contact>))
				mreturn (@List<Contact>)serializer.ReadObject(restServiceGET(requestURI).GetResponseStream())
			end
			(),
				mreturn new List<Contact>()
			endusing
		endmethod
		
		private static method restServiceGET, @WebResponse
			required in requestPath, string
			endparams
		proc
			data fullURI, String, string.Format("{0}/{1}",baseURI,requestPath)
			data request, @HttpWebRequest, (@HttpWebRequest)(HttpWebRequest.Create(fullURI))
			using DataFormat select
			(WebDataFormat.XML),
				request.Accept = "application/xml"
			(WebDataFormat.JSON),
				request.Accept = "application/json"
			endusing
			request.Headers.Add(HttpRequestHeader.AcceptEncoding, "gzip,deflate")
			request.AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate
			data response, @WebResponse, request.GetResponse()

			if (log!=^null)
			begin

				;TODO: Figure out how to display the stream content without resetting it!
				data content, String, ""

				data txt, String, string.Format("Content type: {0}, Length: {1}, Data: {2}",
				&	response.ContentType,response.ContentLength,content)


				log.Text = txt
			end


			mreturn response
		endmethod
		
	endclass
	
endnamespace

