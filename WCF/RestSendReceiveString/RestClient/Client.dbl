
import System
import System.Net.Http
import System.Runtime.InteropServices
import System.Text
import System.Threading.Tasks

namespace RestClient
	
	main Client
		
	proc
		data sendData, String, "ABC"
		Console.WriteLine("Sending  : " + sendData)

		data receievData, String, RestClient.MakeCall(sendData)

		Console.WriteLine("Received : " + receievData)
		Console.ReadLine()

	endmain
	
	public class RestClient
		
		public static method MakeCall, String
			required in requestData, String
		proc
			data result, @Task<String>, MakeAsyncCall(requestData)
			result.Wait()
			mreturn result.Result
		endmethod
		
		private static async method MakeAsyncCall, @Task<String>
			required in requestData, String
		proc
			disposable data requestBody, @ByteArrayContent, new ByteArrayContent(UTF8Encoding.UTF8.GetBytes(requestData))
			disposable data client, @HttpClient, new HttpClient()
			disposable data response, @HttpResponseMessage, await client.PostAsync("http://localhost:8086/Service/SendReceiveString",requestBody)
			mreturn await response.Content.ReadAsStringAsync()
		endmethod
		
	endclass
	
	
endnamespace
