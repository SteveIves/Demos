
import System
import System.Collections.Generic
import System.ServiceModel
import System.Threading.Tasks
import AppDomainProtection
import PartsSystem

namespace WcfServiceLibrary
	
	public partial class PartsService
		
		{OperationContract}
		public method ReadSupplierParts, MethodStatus
			required in  aSupplierId, String
			required out aParts, @List<Part>
			endparams
		proc
			data completionSource = new TaskCompletionSource<Tuple<MethodStatus,List<Part>>>()
			lambda curryParams()
			begin
				data api, @PartsSystemAPI, new PartsSystemAPI()
				data tmpParts, @List<Part>
				completionSource.SetResult(Tuple.Create(api.ReadSupplierParts(aSupplierId,tmpParts),tmpParts))
			end
			this.ServiceDispatcher.Dispatch(curryParams)
			completionSource.Task.Wait()
			aParts = completionSource.Task.Result.Item2
			mreturn completionSource.Task.Result.Item1
		endmethod
		
	endclass
	
endnamespace
