
import System
import System.Net
import System.ServiceModel
import System.ServiceModel.Web

.array 0

namespace TrayListenerApp.WcfService

	;; 
	;;  NOTE:	To be able to wcfServiceHost this service in Visual Studio you must prevent
	;;			WebFaultException from being reported as "unprocessed by user code". To do
	;;			this use the DEBUG > Exceptions Dialog and under Common Language Runtime Exceptions
	;;			uncheck the "User-unhandled" checkbox next to System.ServiceModel.Web.WebFaultException.
	;;
	;;			If you can't find the exception listed use the Add... button to add the
	;;			exception using its full path System.ServiceModel.Web.WebFaultException
	;;			under Common Language Runtime Exceptions.
	;;      
	
	{ServiceBehavior(InstanceContextMode = InstanceContextMode.Single)}
	public class LocalAppService implements ILocalAppService
		
		public method SendMessage, String
			required in messageId, String 
			required in messageData, String 
		proc
			data returnData, String, String.Empty

			;; Validate the ID of the message that was received.
			;; Also an opportunity to validate the message data for the ID.

			using messageId select

			("BROWSER"),
			begin
				;;Validate the message data
				if (!Uri.IsWellFormedUriString(messageData, UriKind.Absolute))
					throw new WebFaultException(HttpStatusCode.BadRequest)
				
				;;This message requires UI support, so we'll pass it over to the main UI thread
				MessageReceived(messageId, messageData)
			end

			("PING"),
			begin
				;;This message does not require any inbound data, and does
				;;not require UI, so we can deal with it here.
				returnData = "PONG!"
				;;But we'll log the fact that it hapenned
				LogMessage(messageId,messageData)
			end

			(),
			begin
				;;Invalid message ID
				throw new WebFaultException(HttpStatusCode.NotFound)
			end

			endusing

			mreturn returnData

		endmethod
		
		public delegate MessageHandler, void
			required in messageId, String 
			required in messageData, String 
		enddelegate
		
		public event MessageReceived, @MessageHandler
		public event LogMessage, @MessageHandler

	endclass

endnamespace

