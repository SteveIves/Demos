;*******************************************************************************
;
; Title:        GetProductsV9.dbl
;
; Type:         Method
;
; Description:  Returns a DataTable containing product records for a specified
;               product group.
;
; Author:       Steve Ives, Synergex Professional Services Group
;
; Copyright:    ©Synergex International Inc.  All rights reserved.
;
; WARNING:      If you were given this code by a Synergex employee then you may
;               use and modify it freely within your own applications. However,
;               you may not under any circumstances distribute this code, or
;               any modified version of this code, to any third party without
;               first obtaining written permission to do so from Synergex.
;               In using this code you accept that it is provided as is, and
;               without support or warranty.  Neither Synergex or the author
;               accept any responsibility for any losses or damages of any
;               nature which may arise from the use of this code.  This header
;               information must remain unaltered in the code at all times.
;               Possession of this code, or any modified version of this code,
;               indicates your acceptance of these terms.
;
; $Revision: $
;
; $Date: $
;
;*******************************************************************************
;
import System.Collections
.include "product" repository, structure="strProduct", end

function GetProductsV9, ^val

    required in aProductGroup     ,a
    required out aProducts ,@ArrayList
    endparams

    .include "INC:remote.def"
    .include "INC:io.def"

    stack record
        Product ,strProduct
    endrecord

proc

    if (%io(IO_FIND,idf_product,1,,aProductGroup,IO_PARTIAL)==IO_OK)
    begin
        repeat
        begin
            if ((%io(IO_READS,idf_product,,Product)==IO_OK)
            &   && (Product.group==aProductGroup)) then
				aProducts.Add((@strProduct)Product)
            else
				exitloop
        end
    end

    freturn mc

endfunction

