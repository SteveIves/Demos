;;*****************************************************************************
;;
;; Routine:     ToReplicateExists
;;
;; Author:      CodeGen V4.1.9
;;
;; Company:     Synergex
;;
;; Created:     09/10/2012 at 16:00
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.1.9.  Any changes that
;;              you make to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************
;;
;; Possible return values from this routine are:
;;
;;  -1  An error occurred
;;  0   Table does not exist
;;  1   Table exists
;;
function ToReplicateExists ,^val

    required in  a_dbchn    ,int    ;;Connected database channel
    optional out a_errtxt   ,a      ;;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "TO_REPLICATE" repository, stack record="to_replicate"

    stack record local_data
        error       ,int    ;;Returned error number
        dberror     ,int    ;;Database error number
        cursor      ,int    ;;Database cursor
        length      ,int    ;;Length of a string
        tblname     ,a128   ;;Retrieved table name
        errtxt      ,a512   ;;Error message text
    endrecord

proc

    init to_replicate,local_data

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the SELECT statement
    ;;
    if (%ssc_open(a_dbchn,cursor,"SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='ToReplicate'",SSQL_SELECT)==SSQL_FAILURE)
    begin
        error=-1
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to open cursor"
    end

    ;;-------------------------------------------------------------------------
    ;;Bind host variables to receive the data
    ;;
    if (!error)
    begin
        if (%ssc_define(a_dbchn,cursor,1,tblname)==SSQL_FAILURE)
        begin
            error=-1
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variable"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Move data to host variables
    ;;
    if (!error)
    begin
        if (%ssc_move(a_dbchn,cursor,1)==SSQL_NORMAL)
            error = 1 ;; Table exists
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (!error)
            begin
                error=-1
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (error) then
            a_errtxt=errtxt
        else
            clear a_errtxt
    end

    freturn error

endfunction

;;*****************************************************************************
;;
;; Routine:     ToReplicateFirstId
;;
;; Author:
;;
;; Company:     Synergex
;;
;; Created:     09/10/2012 at 16:00
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.1.9.  Any changes that
;;              you make to this file will be lost if the code is regenerated.
;;
;;******************************************************************************
;;
;; Possible return values from this routine are:
;;
;;
function ToReplicateFirstId ,boolean

    required in  a_dbchn        ,int    ;Connected database channel
    required out a_audit_log_id ,long   ;Returned ID
    optional out a_errtxt       ,a      ;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "TO_REPLICATE" repository, stack record="to_replicate"

    stack record local_data
        ok              ,boolean    ;;OK to continue
        dberror         ,int        ;;Database error number
        cursor          ,int        ;;Database cursor
        length          ,int        ;;Length of a string
        errtxt          ,a512       ;;Error message text
    endrecord

    static record
        sql     ,string     ;;SQL statement
    endrecord

proc

    init to_replicate,local_data
    clear a_audit_log_id
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the SELECT statement
    ;;
    if (!(a)sql)
        sql = "SELECT MIN(AuditLogId) FROM ToReplicate"

    if (%ssc_open(a_dbchn,cursor,(a)sql,SSQL_SELECT)==SSQL_FAILURE)
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to open cursor"
    end

    ;;-------------------------------------------------------------------------
    ;;Bind host variables to receive the data
    ;;
    if (ok)
    begin
        if (%ssc_define(a_dbchn,cursor,1,a_audit_log_id)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variables"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Move data to host variables
    ;;
    if (ok)
    begin
        if (%ssc_move(a_dbchn,cursor,1)==SSQL_NORMAL) then
        begin

        end
        else
        begin
            ok = false
            clear a_audit_log_id
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction

;;*****************************************************************************
;;
;; Routine:     ToReplicateSelectRow
;;
;; Author:      CodeGen V4.1.9
;;
;; Company:     Synergex
;;
;; Created:     09/10/2012 at 16:00
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.1.9.  Any changes that
;;              you make to this file will be lost if the code is regenerated.
;;
;;******************************************************************************
;;
;; Possible return values from this routine are:
;;
;;   true   Success, row returned
;;   false  Error, see a_errtxt
;;
function ToReplicateSelectRow ,^val

    required in  a_dbchn        ,int    ;Connected database channel
    optional in  a_audit_log_id ,long
    required out a_data         ,a      ;Record
    optional out a_errtxt       ,a      ;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "TO_REPLICATE" repository, stack record="to_replicate"

    stack record local_data
        ok      ,boolean    ;;OK to continue
        dberror ,int        ;;Database error number
        cursor  ,int        ;;Database cursor
        length  ,int        ;;Length of a string
        errtxt  ,a512       ;;Error message text
    endrecord

    static record
        sql     ,string     ;;SQL statement
    endrecord

proc

    init to_replicate,local_data
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the SELECT statement
    ;;
    if (!(a)sql)
        sql = "SELECT AuditLogId,ChangeDate,TableName,ChangeType,RowGuid FROM ToReplicate WHERE AuditLogId=:1"

    if (%ssc_open(a_dbchn,cursor,(a)sql,SSQL_SELECT,,1,a_audit_log_id)==SSQL_FAILURE)
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to open cursor"
    end

    ;;-------------------------------------------------------------------------
    ;;Bind host variables to receive the data
    ;;
    if (ok)
    begin
        if (%ssc_define(a_dbchn,cursor,5,
        &    to_replicate.audit_log_id,
        &    to_replicate.change_date,
        &    to_replicate.table_name,
        &    to_replicate.change_type,
        &    to_replicate.row_guid
        &   )==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variables"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Move data to host variables
    ;;
    if (ok)
    begin
        if (%ssc_move(a_dbchn,cursor,1)==SSQL_NORMAL) then
            a_data = to_replicate
        else
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction

;;*****************************************************************************
;;
;; Routine:     ToReplicateDeleteRow
;;
;; Author:      CodeGen V4.1.9
;;
;; Company:     Synergex
;;
;; Created:     09/10/2012 at 16:00
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.1.9.  Any changes that
;;              you make to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************
;;
;; Possible return values from this routine are:
;;
;;  true    row deleted
;;  false   Error (see a_errtxt)
;;
function ToReplicateDeleteRow ,^val

    required in  a_dbchn        ,int    ;;Connected database channel
    required in  a_audit_log_id ,long
    optional out a_errtxt       ,a      ;;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "TO_REPLICATE" repository, stack record="to_replicate"

    stack record local_data
        ok          ,boolean    ;;Return status
        dberror     ,int        ;;Database error number
        cursor      ,int        ;;Database cursor
        length      ,int        ;;Length of a string
        transaction ,int        ;;Transaction in progress
        errtxt      ,a512       ;;Error message text
        sql         ,string     ;;SQL statement
    endrecord

proc

    init local_data
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Start a database transaction
    ;;
    if (%ssc_commit(a_dbchn,SSQL_TXON)==SSQL_NORMAL) then
        transaction=1
    else
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to start transaction"
    end

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the DELETE statement
    ;;
    if (ok)
    begin
        sql = "DELETE FROM ToReplicate WHERE AuditLogId=:1"
        if (%ssc_open(a_dbchn,cursor,(a)sql,SSQL_NONSEL,,1,a_audit_log_id)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to open cursor"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Execute the query
    ;;
    if (ok)
    begin
        if (%ssc_execute(a_dbchn,cursor,SSQL_STANDARD)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Commit or rollback the transaction
    ;;
    if (transaction)
    begin
        if (ok) then
        begin
            ;;Success, commit the transaction
            if (%ssc_commit(a_dbchn,SSQL_TXOFF)==SSQL_FAILURE)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to commit transaction"
            end
        end
        else
        begin
            ;;There was an error, rollback the transaction
            xcall ssc_rollback(a_dbchn,SSQL_TXOFF)
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction

