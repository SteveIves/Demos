;;*****************************************************************************
;;
;; Routine:     customer_insert_row
;;
;; Author:      "Steve Ives" (stevei)
;;
;; Company:     "Synergex"
;;
;; Created:     07/24/2013 at 17:42
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.2.12.  Any changes that
;;              you make to this file will be lost if the code is regenerated
;;
;; This code is supplied as seen and without warranty or support, and is used
;; at your own risk. Neither the author or Synergex accept any responsability
;; for any loss or damage which may result from the use of this code. This text
;; must remain unaltered in this file at all times. Possession or use of this
;; code, or any modified version of this code, indicates your acceptance of
;; these conditions.
;;
;;*****************************************************************************
;;
;; Possible return values from this routine are:
;;
;;  true    Row inserted
;;  false   Error (see a_errtxt)
;;
function customer_insert_row ,^val

    required in  a_dbchn    ,int    ;;Connected database channel
    required in  a_data     ,a      ;;Record containing data to insert
    optional out a_errtxt   ,a      ;;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "CUSTOMER" repository, stack record="customer"

    external function
        IsNumeric   ,^val
    endexternal

    stack record local_data
        ok          ,boolean    ;;Return status
        dberror     ,int        ;;Database error number
        cursor      ,int        ;;Database cursor
        cnt         ,int        ;;Generic counter
        transaction ,int        ;;Transaction in progress
        length      ,int        ;;Length of a string
        errtxt      ,a256       ;;Error message text
    endrecord

    static record
        sql         ,string     ;;SQL statement
    endrecord

proc

    init local_data
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Start a database transaction
    ;;
    if (%ssc_commit(a_dbchn,SSQL_TXON)==SSQL_NORMAL) then
        transaction=1
    else
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to start transaction"
    end

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the INSERT statement
    ;;
    if (ok)
    begin
        if (!(a)sql)
        begin
            sql = "INSERT INTO CUSTOMER ("
            & + "ACCOUNT,"
            & + "COMPANY,"
            & + "STREET,"
            & + "CITY,"
            & + "STATE,"
            & + "ZIP,"
            & + "PHONE_NUMBER,"
            & + "FAX_NUMBER,"
            & + "MOBILE_NUMBER,"
            & + "PAGER_NUMBER,"
            & + "EMAIL1,"
            & + "EMAIL2,"
            & + "DATE_OPENED,"
            & + "DATE_HOLD,"
            & + "DATE_CLOSED,"
            & + "STATUS,"
            & + "LIMIT,"
            & + "BALANCE,"
            & + "CARD_NUMBER,"
            & + "CARD_EXPIRY,"
            & + "CARD_NAME"
            & + ") VALUES(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21)"
        end

        if (%ssc_open(a_dbchn,cursor,(a)sql,SSQL_NONSEL,SSQL_STANDARD)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to open cursor"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Bind the host variables for data to be inserted
    ;;
    if (ok)
    begin
        if (%ssc_bind(a_dbchn,cursor,21,
		&    customer.account,
		&    customer.company,
		&    customer.street,
		&    customer.city,
		&    customer.state,
		&    customer.zip,
		&    customer.phone_number,
		&    customer.fax_number,
		&    customer.mobile_number,
		&    customer.pager_number,
		&    customer.email1,
		&    customer.email2,
		&    ^a(customer.date_opened),
		&    ^a(customer.date_hold),
		&    ^a(customer.date_closed),
		&    customer.status,
		&    customer.limit,
		&    customer.balance,
		&    customer.card_number,
		&    customer.card_expiry,
		&    customer.card_name
        &   )==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variables"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Insert the row into the database
    ;;
    if (ok)
    begin
        ;;Load data into bound record
        customer = a_data

        ;;Clean up the data
        customer.account=%atrim(customer.account)+%char(0)
        customer.company=%atrim(customer.company)+%char(0)
        customer.street=%atrim(customer.street)+%char(0)
        customer.city=%atrim(customer.city)+%char(0)
        customer.state=%atrim(customer.state)+%char(0)
        if ((!customer.zip)||(!%IsNumeric(^a(customer.zip))))
            clear customer.zip
        if ((!customer.phone_number)||(!%IsNumeric(^a(customer.phone_number))))
            clear customer.phone_number
        if ((!customer.fax_number)||(!%IsNumeric(^a(customer.fax_number))))
            clear customer.fax_number
        if ((!customer.mobile_number)||(!%IsNumeric(^a(customer.mobile_number))))
            clear customer.mobile_number
        if ((!customer.pager_number)||(!%IsNumeric(^a(customer.pager_number))))
            clear customer.pager_number
        customer.email1=%atrim(customer.email1)+%char(0)
        customer.email2=%atrim(customer.email2)+%char(0)
        if ((!customer.date_opened)||(!%IsNumeric(^a(customer.date_opened))))
            ^a(customer.date_opened(1:1))=%char(0)
        if ((!customer.date_hold)||(!%IsNumeric(^a(customer.date_hold))))
            ^a(customer.date_hold(1:1))=%char(0)
        if ((!customer.date_closed)||(!%IsNumeric(^a(customer.date_closed))))
            ^a(customer.date_closed(1:1))=%char(0)
        if ((!customer.status)||(!%IsNumeric(^a(customer.status))))
            clear customer.status
        if ((!customer.limit)||(!%IsNumeric(^a(customer.limit))))
            clear customer.limit
        if ((!customer.balance)||(!%IsNumeric(^a(customer.balance))))
            clear customer.balance
        customer.card_number=%atrim(customer.card_number)+%char(0)
        if ((!customer.card_expiry)||(!%IsNumeric(^a(customer.card_expiry))))
            clear customer.card_expiry
        customer.card_name=%atrim(customer.card_name)+%char(0)

        ;;Execute INSERT statement
        if (%ssc_execute(a_dbchn,cursor,SSQL_STANDARD)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Commit or rollback the transaction
    ;;
    if (transaction)
    begin
        if (ok) then
        begin
            ;;Success, commit the transaction
            if (%ssc_commit(a_dbchn,SSQL_TXOFF)==SSQL_FAILURE)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to commit transaction"
            end
        end
        else
        begin
            ;;There was an error, rollback the transaction
            xcall ssc_rollback(a_dbchn,SSQL_TXOFF)
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction
