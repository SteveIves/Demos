;;*****************************************************************************
;;
;; Routine:     order_header_insert_row
;;
;; Author:      "Steve Ives"
;;
;; Company:     "Synergex Professional Services Group"
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen. Any changes that you make
;;              to this file will be lost if the code is regenerated.
;;
;; This code is supplied as seen and without warranty or support, and is used
;; at your own risk. Neither the author or Synergex accept any responsability
;; for any loss or damage which may result from the use of this code. This text
;; must remain unaltered in this file at all times. Possession or use of this
;; code, or any modified version of this code, indicates your acceptance of
;; these conditions.
;;
;;*****************************************************************************
;;
;; Possible return values from this routine are:
;;
;;  true    Row inserted
;;  false   Error (see a_errtxt)
;;
function order_header_insert_row ,^val

    required in  a_dbchn    ,int    ;;Connected database channel
    required in  a_data     ,a      ;;Record containing data to insert
    optional out a_errtxt   ,a      ;;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "ORDER_HEADER" repository, stack record="order_header"

    external function
        IsNumeric   ,^val
    endexternal

    stack record local_data
        ok          ,boolean    ;;Return status
        dberror     ,int        ;;Database error number
        cursor      ,int        ;;Database cursor
        cnt         ,int        ;;Generic counter
        transaction ,int        ;;Transaction in progress
        length      ,int        ;;Length of a string
        errtxt      ,a256       ;;Error message text
    endrecord

	literal
		sql, a*, "INSERT INTO ORDER_HEADER ("
		& "ORDER_NUMBER,"
		& "ORDER_DATE,"
		& "STATUS,"
		& "SHIP_DATE,"
		& "CUSTOMER,"
		& "DELIVERY_DATE,"
		& "CUSTOMER_ORDER_REF,"
		& "GOODS_VALUE,"
		& "TAX_VALUE,"
		& "SHIPPING_VALUE,"
		& "GIFT_WRAP,"
		& "GIFT_MESSAGE"
		& ") VALUES(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12)"		
	endliteral
	
proc

    init local_data
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Start a database transaction
    ;;
    if (%ssc_commit(a_dbchn,SSQL_TXON)==SSQL_NORMAL) then
        transaction=1
    else
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to start transaction"
    end

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the INSERT statement
    ;;
    if (ok)
    begin
        if (%ssc_open(a_dbchn,cursor,sql,SSQL_NONSEL,SSQL_STANDARD)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to open cursor"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Bind the host variables for data to be inserted
    ;;
    if (ok)
    begin
        if (%ssc_bind(a_dbchn,cursor,12,
		&    order_header.order_number,
		&    ^a(order_header.order_date),
		&    order_header.status,
		&    ^a(order_header.ship_date),
		&    order_header.customer,
		&    ^a(order_header.delivery_date),
		&    order_header.customer_order_ref,
		&    order_header.goods_value,
		&    order_header.tax_value,
		&    order_header.shipping_value,
		&    order_header.gift_wrap,
		&    order_header.gift_message
        &   )==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variables"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Insert the row into the database
    ;;
    if (ok)
    begin
        ;;Load data into bound record
        order_header = a_data

        ;;Clean up the data
        if ((!order_header.order_number)||(!%IsNumeric(^a(order_header.order_number))))
            clear order_header.order_number
        if ((!order_header.order_date)||(!%IsNumeric(^a(order_header.order_date))))
            ^a(order_header.order_date(1:1))=%char(0)
        order_header.status=%atrim(order_header.status)+%char(0)
        if ((!order_header.ship_date)||(!%IsNumeric(^a(order_header.ship_date))))
            ^a(order_header.ship_date(1:1))=%char(0)
        order_header.customer=%atrim(order_header.customer)+%char(0)
        if ((!order_header.delivery_date)||(!%IsNumeric(^a(order_header.delivery_date))))
            ^a(order_header.delivery_date(1:1))=%char(0)
        order_header.customer_order_ref=%atrim(order_header.customer_order_ref)+%char(0)
        if ((!order_header.goods_value)||(!%IsNumeric(^a(order_header.goods_value))))
            clear order_header.goods_value
        if ((!order_header.tax_value)||(!%IsNumeric(^a(order_header.tax_value))))
            clear order_header.tax_value
        if ((!order_header.shipping_value)||(!%IsNumeric(^a(order_header.shipping_value))))
            clear order_header.shipping_value
        if ((!order_header.gift_wrap)||(!%IsNumeric(^a(order_header.gift_wrap))))
            clear order_header.gift_wrap
        order_header.gift_message=%atrim(order_header.gift_message)+%char(0)

        ;;Execute INSERT statement
        if (%ssc_execute(a_dbchn,cursor,SSQL_STANDARD)==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Commit or rollback the transaction
    ;;
    if (transaction)
    begin
        if (ok) then
        begin
            ;;Success, commit the transaction
            if (%ssc_commit(a_dbchn,SSQL_TXOFF)==SSQL_FAILURE)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to commit transaction"
            end
        end
        else
        begin
            ;;There was an error, rollback the transaction
            xcall ssc_rollback(a_dbchn,SSQL_TXOFF)
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction
