;;*****************************************************************************
;;
;; Routine:     customer_select_row
;;
;; Author:      "Steve Ives"
;;
;; Company:     "Synergex Professional Services Group"
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen. Any changes that you make
;;              to this file will be lost if the code is regenerated.
;;
;; This code is supplied as seen and without warranty or support, and is used
;; at your own risk. Neither the author or Synergex accept any responsability
;; for any loss or damage which may result from the use of this code. This text
;; must remain unaltered in this file at all times. Possession or use of this
;; code, or any modified version of this code, indicates your acceptance of
;; these conditions.
;;
;;******************************************************************************
;;
;; Possible return values from this routine are:
;;
;;   true   Success, row returned
;;   false  Error, see a_errtxt
;;
function customer_select_row ,^val

    required in  a_dbchn    ,int    ;Connected database channel
	optional in  a_account ,a
    required out a_data     ,a      ;Record
    optional out a_errtxt   ,a      ;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "CUSTOMER" repository, stack record="customer"

    stack record local_data
        ok      ,boolean    ;;OK to continue
        dberror ,int        ;;Database error number
        cursor  ,int        ;;Database cursor
        length  ,int        ;;Length of a string
        errtxt  ,a256       ;;Error message text
    endrecord

    static record
        sql     ,string     ;;SQL statement
    endrecord

proc

    init customer,local_data
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the SELECT statement
    ;;
    if (!(a)sql)
    begin
        sql = "SELECT "
        &    "ACCOUNT,"
        &    "COMPANY,"
        &    "STREET,"
        &    "CITY,"
        &    "STATE,"
        &    "ZIP,"
        &    "PHONE_NUMBER,"
        &    "FAX_NUMBER,"
        &    "MOBILE_NUMBER,"
        &    "PAGER_NUMBER,"
        &    "EMAIL1,"
        &    "EMAIL2,"
        &    "DATE_OPENED,"
        &    "DATE_HOLD,"
        &    "DATE_CLOSED,"
        &    "STATUS,"
        &    "LIMIT,"
        &    "BALANCE,"
        &    "CARD_NUMBER,"
        &    "CARD_EXPIRY,"
        &    "CARD_NAME"
        &    " FROM CUSTOMER"
        &    " WHERE ACCOUNT=:1"
    end

    if (%ssc_open(a_dbchn,cursor,(a)sql,SSQL_SELECT,,1,a_account)==SSQL_FAILURE)
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to open cursor"
    end

    ;;-------------------------------------------------------------------------
    ;;Bind host variables to receive the data
    ;;
    if (ok)
    begin
        if (%ssc_define(a_dbchn,cursor,21,
		&    customer.account,
		&    customer.company,
		&    customer.street,
		&    customer.city,
		&    customer.state,
		&    customer.zip,
		&    customer.phone_number,
		&    customer.fax_number,
		&    customer.mobile_number,
		&    customer.pager_number,
		&    customer.email1,
		&    customer.email2,
		&    ^a(customer.date_opened),
		&    ^a(customer.date_hold),
		&    ^a(customer.date_closed),
		&    customer.status,
		&    customer.limit,
		&    customer.balance,
		&    customer.card_number,
		&    customer.card_expiry,
		&    customer.card_name
        &   )==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variables"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Move data to host variables
    ;;
    if (ok)
    begin
        if (%ssc_move(a_dbchn,cursor,1)==SSQL_NORMAL) then
            a_data = customer
        else
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction
