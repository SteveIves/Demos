;;*****************************************************************************
;;
;; Routine:     order_header_select_row
;;
;; Author:      "Steve Ives"
;;
;; Company:     "Synergex Professional Services Group"
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen. Any changes that you make
;;              to this file will be lost if the code is regenerated.
;;
;; This code is supplied as seen and without warranty or support, and is used
;; at your own risk. Neither the author or Synergex accept any responsability
;; for any loss or damage which may result from the use of this code. This text
;; must remain unaltered in this file at all times. Possession or use of this
;; code, or any modified version of this code, indicates your acceptance of
;; these conditions.
;;
;;******************************************************************************
;;
;; Possible return values from this routine are:
;;
;;   true   Success, row returned
;;   false  Error, see a_errtxt
;;
function order_header_select_row ,^val

    required in  a_dbchn    ,int    ;Connected database channel
	optional in  a_order_number ,a
    required out a_data     ,a      ;Record
    optional out a_errtxt   ,a      ;Error text
    endparams

    .include "CONNECTDIR:ssql.def"
    .include "ORDER_HEADER" repository, stack record="order_header"

    stack record local_data
        ok      ,boolean    ;;OK to continue
        dberror ,int        ;;Database error number
        cursor  ,int        ;;Database cursor
        length  ,int        ;;Length of a string
        errtxt  ,a256       ;;Error message text
    endrecord

    literal 
        sql, a*, "SELECT "
        & "ORDER_NUMBER,"
        & "ORDER_DATE,"
        & "STATUS,"
        & "SHIP_DATE,"
        & "CUSTOMER,"
        & "DELIVERY_DATE,"
        & "CUSTOMER_ORDER_REF,"
        & "GOODS_VALUE,"
        & "TAX_VALUE,"
        & "SHIPPING_VALUE,"
        & "GIFT_WRAP,"
        & "GIFT_MESSAGE"
        & " FROM ORDER_HEADER"
        & " WHERE  ORDER_NUMBER=:1 "
    endliteral

proc

    init order_header,local_data
    ok = true

    ;;-------------------------------------------------------------------------
    ;;Open a cursor for the SELECT statement
    ;;
    if (%ssc_open(a_dbchn,cursor,sql,SSQL_SELECT,,1,a_order_number)==SSQL_FAILURE)
    begin
        ok = false
        if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
            errtxt="Failed to open cursor"
    end

    ;;-------------------------------------------------------------------------
    ;;Bind host variables to receive the data
    ;;
    if (ok)
    begin
        if (%ssc_define(a_dbchn,cursor,12,
		&    order_header.order_number,
		&    ^a(order_header.order_date),
		&    order_header.status,
		&    ^a(order_header.ship_date),
		&    order_header.customer,
		&    ^a(order_header.delivery_date),
		&    order_header.customer_order_ref,
		&    order_header.goods_value,
		&    order_header.tax_value,
		&    order_header.shipping_value,
		&    order_header.gift_wrap,
		&    order_header.gift_message
        &   )==SSQL_FAILURE)
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to bind variables"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Move data to host variables
    ;;
    if (ok)
    begin
        if (%ssc_move(a_dbchn,cursor,1)==SSQL_NORMAL) then
            a_data = order_header
        else
        begin
            ok = false
            if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                errtxt="Failed to execute SQL statement"
        end
    end

    ;;-------------------------------------------------------------------------
    ;;Close the database cursor
    ;;
    if (cursor)
    begin
        if (%ssc_close(a_dbchn,cursor)==SSQL_FAILURE)
        begin
            if (ok)
            begin
                ok = false
                if (%ssc_getemsg(a_dbchn,errtxt,length,,dberror)==SSQL_FAILURE)
                    errtxt="Failed to close cursor"
            end
        end
    end

    ;;-------------------------------------------------------------------------
    ;;If there was an error message, return it to the calling routine
    ;;
    if (^passed(a_errtxt))
    begin
        if (ok) then
            clear a_errtxt
        else
            a_errtxt=errtxt
    end

    freturn ok

endfunction
