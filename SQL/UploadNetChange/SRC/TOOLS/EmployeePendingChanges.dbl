import System.Collections
import Synergex.SynergyDE.Select
import DatabaseTools
import IsamTools

main EmployeePendingChanges

    record
        tt,                     int
        ok,                     boolean
        disableSynBackup,       boolean
        disconnectFromDatabase, boolean
        dbConnection,           @DatabaseConnection
        employeeTable,   @EmployeeTable
    endrecord

    .define DB_CONSTR "VTX12_SQLNATIVE://SqlUploadNetChange/.///Trusted_connection=yes"

proc

    ok = true
    open(tt=0,i,"tt:")
    xcall flags(7004020,1)

    ;;Check we're running as an administrator, synbackup -q will fail if not.

    try
    begin
        data tmpch, int
        open(tmpch=0,i,"|synbackup -q")
        close tmpch
    end
    catch (ex)
    begin
        writes(tt,"ERROR: This program requires administrator rights")
        ok = false
    end
    endtry

    ;;Check change tracking is ebabled on the file

    if (ok)
    begin
        if (ChangeTracking.IsEnabled("DAT:employee.ism")) then
        begin

            data snapshots, @ArrayList, new ArrayList()
            if (!ChangeTracking.GetSnapshots("DAT:employee.ism",snapshots)) then
            begin
                writes(tt,"ERROR: Failed to retrieve snapshot info for DAT:employee.ism")
                ok = false
            end
            else
            begin
                if (snapshots.Count==0)
                begin
                    writes(tt,"ERROR: No snapshots found in DAT:employee.ism")
                    ok = false
                end
            end
        end
        else
        begin
            writes(tt,"ERROR: Change tracking is not enabled for DAT:employee.ism")
            ok = false
        end
    end

    ;;Now we can update the database

    if (ok)
    begin

        ;;Earlier we checked that there was at least one snapshot in the file,
        ;;and since then we have added another. So we know that there are AT
        ;;LEAST two snapshots in the file now. We'll export all net change
        ;;between the oldest and newest snapshots.

        data snapshots, @ArrayList
		data newestSnapshot, int
        data employee, strEmployee
        data results, @AlphaEnumerator
        data inserts, int, 0
        data updates, int, 0
        data deletes, int, 0
        data fred, CTState

        ;;Get the collection of snapshots from the file.

		ChangeTracking.GetSnapshots("DAT:employee.ism",snapshots)

        ;;Figure out the oldest and newest snapshot numbers

		newestSnapshot = ((@Snapshot)snapshots[snapshots.Count-1]).SnapshotNumber

        ;;Select the net change since the last snapshot

        results = new Select(new From("DAT:employee.ism",employee),
        &   Where.NetChange(newestSnapshot,newestSnapshot+1)).GetEnumerator()

        ;;Display the changes

        while (results.MoveNext())
        begin
            data success, boolean
            employee = results.Current

            fred = results.GetCTInfo.GetCTState

            if (fred & CTState.Insert) then
            begin
                writes(tt,"INSERT: " + employee(1:50))
                inserts += 1
            end
            else if (fred & CTState.Update) then
            begin
                writes(tt,"UPDATE: " + employee(1:50))
                updates += 1
            end
            else if (fred & CTState.Delete) then
            begin
                writes(tt,"DELETE: " + employee(1:50))
                deletes += 1
            end
            else
            begin
                writes(tt,"UNKNOWN CTState = " + %string(fred))
            end

        end

        ;;Report the totals

		writes(tt,%string(inserts) + " inserts, " + %string(updates) + " updates, " + %string(deletes) + " deletes")

    end

    ;;All done

    begin
        data char, a1
        display(tt,"Press a key to exit: ")
        accept(tt,char)
    end

    stop

endmain

