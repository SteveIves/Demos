;*******************************************************************************
;
; Title:        position_window.dbl
;
; Description:  Position a window in the center of the application window, or
;               relative to another window.
;
; Author:       Richard C. Morris
;
; Copyright:    ©Synergex International Inc.  All rights reserved.
;
; WARNING:      If you were given this code by a Synergex employee then you may
;               use and modify it freely for use with your own applications.
;               However, you may not under any circumstances distribute this
;               code, or any modified version of this code, to any third party
;               without first obtaining written permission to do so from
;               Synergex.  In using this code you accept that it is provided
;               as is, and without support or warranty.  Neither Synergex or the
;               author accept any responsibility for any losses or damages of
;               any nature which may arise from the use of this code.  This
;               header information must remain, unaltered, in the code at all
;               times.  Posession of this code, or any modified version of this
;               code, indicates your acceptance of these terms.
;
; $Revision: 1 $
;
; $Date: 2012-02-15 23:57:38-06:00 $
;
;*******************************************************************************
;
; Revision log:
;
; $History: /Demos/SQL/Replication/SRC/APPLICATION/position_window.dbl $
;; 
;; ****************** Version 1 ****************** 
;; User: Steve Ives   Date: 2012-02-15   Time: 23:57:38-06:00 
;; Updated in: /Demos/SQL/Replication/SRC/APPLICATION 
;; 
;; ****************** Version 1 ****************** 
;; User: Steve Ives   Date: 2009-03-01   Time: 19:25:58-08:00 
;; Updated in: /Development/Demos/Sql/Replication/SRC/TKLIB 
;
;*****************  Version 2  *****************
;User: Stevei       Date: 4/03/07    Time: 10:08a
;Updated in $/Synergy Projects/Code Generator/SUB
;Updated file header
;
;*******************************************************************************
;
.subroutine position_window

    a_object_id			,n   ;ID of window to place
    a_islist			,n   ;Window to place is a list
    a_relative_to_id	,n   ;Position window relative to this window
    a_row_offset		,n   ;Row offset from relative window
    a_col_offset		,n   ;Column offset from relative window

.include "WND:tools.def"
.include "WND:windows.def"

.align
stack record
    wndid,          i4
    row,            i4
    col,            i4

.proc

    if (^passed(a_relative_to_id)&&a_relative_to_id) then
    begin
		row = %w_info(WIF_ACTPROW, a_relative_to_id)
		col = %w_info(WIF_ACTPCOL, a_relative_to_id)

		if (^passed(a_row_offset)&&a_row_offset) then
		   row+=a_row_offset
	   else
		   row+=1

	  if (^passed(a_col_offset)&&a_col_offset) then
		  col+=a_col_offset
	  else
		  col+=1
    end
    else
    begin
        if (^passed(a_islist)&&a_islist) then
        begin
            xcall l_status(a_object_id, D_LINPID, wndid)
            row = (%w_info(WIF_SROWS) - %w_info(WIF_ROWS, a_object_id))/2
            col = (%w_info(WIF_SCOLS) - %w_info(WIF_DCOLSIZ, wndid))/2
        end
        else
        begin
            row = (%w_info(WIF_SROWS) - %w_info(WIF_DROWSIZ, a_object_id))/2
            col = (%w_info(WIF_SCOLS) - %w_info(WIF_DCOLSIZ, a_object_id))/2
        end
    end

    if (^passed(a_islist)&&a_islist) then
    begin
        xcall l_remove(a_object_id)
        xcall l_place(a_object_id, row, col)
    end
    else
    begin
        xcall u_window(D_REMOVE, a_object_id)
        xcall u_window(D_PLACE, a_object_id, row, col)
    end

    xreturn

.end

