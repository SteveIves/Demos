;;*****************************************************************************
;;
;; Title:       DatabaseConnection.dbl
;;
;; Type:        Class
;;
;; Description: Provides the ability to connect to, and represents a connection
;;              to a SQL Server database.
;;
;; Author:      CodeGen V4.2.12
;;
;; Company:     Synergex
;;
;; Created:     07/24/2013 at 17:48
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.2.12.  Any changes that
;;              you make to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************
;;
.include "CONNECTDIR:ssql.def"

namespace SqlUploadDemo

    public class DatabaseConnection

        private mConnectString, string
        private mConnected, boolean, false
        private mChannel, int

        public method DatabaseConnection
            required in aChannel, int
            required in aConnectString, string
            optional in aMaxCursors, int
            optional in aMaxColumns, int
            optional in aBufferSize, int
            optional in aDbCursors, int
            endparams
            record
                maxCursors, int
                maxColumns, int
                bufferSize, int
                dbCursors, int
            endrecord
        proc

            mChannel = aChannel
            mConnectString = aConnectString

            if (^passed(aMaxCursors)&&aMaxCursors) then
                maxCursors = aMaxCursors
            else
                maxCursors = 128

            if (^passed(aMaxColumns)&&aMaxColumns) then
                maxColumns = aMaxColumns
            else
                maxColumns = 254

            if (^passed(aBufferSize)&&aBufferSize) then
                bufferSize = aBufferSize
            else
                bufferSize = 32768

            if (^passed(aDbCursors)&&aDbCursors) then
                dbCursors = aDbCursors
            else
                dbCursors = maxCursors

            ;Initialize SQL Connection
            begin
                data sts, int
                .ifdef OS_VMS
                xcall init_ssql
                .else
                sts=%option(48,1)
                .endc
            end

            ;Initialize a database channel
            if (ssc_init(mChannel,maxCursors,maxColumns,bufferSize,dbCursors)==SSQL_FAILURE)
                throw new Exception("Failed to initialize database channel")

            ;Connect to the database
            if (ssc_connect(mChannel,mConnectString)==SSQL_FAILURE)
            begin
                data errtxt, a512
                data tmpLen, int
                ssc_getemsg(mChannel,errtxt,tmpLen)
                throw new Exception("Failed to connect to database. Error was: "+errtxt(1:tmpLen))
            end

            mConnected = true

        endmethod

        method ~DatabaseConnection
            endparams
        proc
            if (mConnected)
                this.Disconnect()
        endmethod

        public property ConnectString, string
            method get
            proc
                mreturn mConnectString
            endmethod
        endproperty

        public method Disconnect, void
            endparams
        proc
            if (mConnected)
                ssc_release(mChannel)
        endmethod

        public property Channel, int
            method get
            proc
                mreturn mChannel
            endmethod
        endproperty

    endclass

endnamespace
