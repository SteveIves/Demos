;;*****************************************************************************
;;
;; Title:       DatabaseTableTest.dbl
;;
;; Type:        Program
;;
;; Description: A Synergy program which connects to a SQL Server relational
;;              database. The program is intended to be used as a test platform
;;              for routines generated from the DatabaseTable* templates.
;;
;; Author:      "Steve Ives"
;;
;; Company:     "Synergex"
;;
;; Created:     04/18/2013 at 10:55
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen V4.2.10. Any changes that
;;              you make to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************
;;
import SqlUploadDemo

main DatabaseTableTest

     .define DB_CONSTR "VTX12_SQLNATIVE://SqlUploadTable/.///Trusted_connection=yes"
	 ;.define DB_CONSTR "NET:SqlUpload/SqlUploadPassword/SqlUpload@localhost!VTX12_SQLNATIVE"

    record
        tt              ,i4                     ;;Terminal channel
        ok              ,boolean, true          ;;OK to continue?
        connected       ,boolean, false         ;;Connected to database?
        db              ,@DatabaseConnection    ;;Connection to database
        rowcount        ,i4                     ;;Rows to load / loaded
        failrows        ,i4                     ;;Rows that failed to load

        custTable       ,@CustomerTable
        headTable       ,@OrderHeaderTable
        lineTable       ,@OrderLineTable
        prodTable       ,@ProductTable
        prodGrpTable    ,@ProductGroupTable

    endrecord
proc

    ;---------------------------------------------------------------------------
    ;Open the terminal

    open(tt=0,i,"tt:")
    xcall flags(7004020,1)

    try
    begin
        db = new DatabaseConnection(1,DB_CONSTR)
		db.Connect()
        connected = true
    end
    catch (ex)
    begin
        ok = false
    end
    endtry

    ;--------------------------------------------------------------------------
    ;Customer table

    if (ok)
        custTable = new CustomerTable(db)

    if (ok)
    begin
        writes(tt,"Checking for table CustomerTable ... ")
        if (custTable.Exists())
        begin
            writes(tt,"Deleting table CustomerTable ... ")
            if (!custTable.Drop())
            begin
                writes(tt,custTable.ErrorMessage)
                clear ok
            end
        end
        if (ok)
        begin
            writes(tt,"Creating table CustomerTable ... ")
            if (!custTable.Create())
            begin
                writes(tt,custTable.ErrorMessage)
                clear ok
            end
        end
    end

    if (ok)
    begin
        writes(tt,"Loading table CustomerTable ... ")
        ;;Don't pass rowcount (or set it to 0) to load the full file!
        rowcount = 0
        custTable.CleanData = true
        custTable.EmptyAlphaNull = true
        if (custTable.Load(true,tt,rowcount,failrows)) then
            writes(tt,string(rowcount) + " rows loaded, "+string(failrows)+" failed")
        else
        begin
            writes(tt,custTable.ErrorMessage)
            clear ok
        end
    end

    custTable = ^null

    ;--------------------------------------------------------------------------
    ;OrderHeaderTable table

    if (ok)
        headTable = new OrderHeaderTable(db)

    if (ok)
    begin
        writes(tt,"Checking for table OrderHeaderTable ... ")
        if (headTable.Exists())
        begin
            writes(tt,"Deleting table OrderHeaderTable ... ")
            if (!headTable.Drop())
            begin
                writes(tt,headTable.ErrorMessage)
                clear ok
            end
        end
        if (ok)
        begin
            writes(tt,"Creating table OrderHeaderTable ... ")
            if (!headTable.Create())
            begin
                writes(tt,headTable.ErrorMessage)
                clear ok
            end
        end
    end

    if (ok)
    begin
        writes(tt,"Loading table OrderHeaderTable ... ")
        ;;Don't pass rowcount (or set it to 0) to load the full file!
        rowcount = 0
        headTable.CleanData = true
        headTable.EmptyAlphaNull = true
        if (headTable.Load(true,tt,rowcount,failrows)) then
            writes(tt,string(rowcount) + " rows loaded, "+string(failrows)+" failed")
        else
        begin
            writes(tt,headTable.ErrorMessage)
            clear ok
        end
    end

    headTable = ^null

    ;--------------------------------------------------------------------------
    ;OrderLineTable table

    if (ok)
        lineTable = new OrderLineTable(db)

    if (ok)
    begin
        writes(tt,"Checking for table OrderLineTable ... ")
        if (lineTable.Exists())
        begin
            writes(tt,"Deleting table OrderLineTable ... ")
            if (!lineTable.Drop())
            begin
                writes(tt,lineTable.ErrorMessage)
                clear ok
            end
        end
        if (ok)
        begin
            writes(tt,"Creating table OrderLineTable ... ")
            if (!lineTable.Create())
            begin
                writes(tt,lineTable.ErrorMessage)
                clear ok
            end
        end
    end

    if (ok)
    begin
        writes(tt,"Loading table OrderLineTable ... ")
        ;;Don't pass rowcount (or set it to 0) to load the full file!
        rowcount = 0
        lineTable.CleanData = true
        lineTable.EmptyAlphaNull = true
        if (lineTable.Load(true,tt,rowcount,failrows)) then
            writes(tt,string(rowcount) + " rows loaded, "+string(failrows)+" failed")
        else
        begin
            writes(tt,lineTable.ErrorMessage)
            clear ok
        end
    end

    lineTable = ^null

    ;--------------------------------------------------------------------------
    ;Product table

    if (ok)
        prodTable = new ProductTable(db)

    if (ok)
    begin
        writes(tt,"Checking for table ProductTable ... ")
        if (prodTable.Exists())
        begin
            writes(tt,"Deleting table ProductTable ... ")
            if (!prodTable.Drop())
            begin
                writes(tt,prodTable.ErrorMessage)
                clear ok
            end
        end
        if (ok)
        begin
            writes(tt,"Creating table ProductTable ... ")
            if (!prodTable.Create())
            begin
                writes(tt,prodTable.ErrorMessage)
                clear ok
            end
        end
    end

    if (ok)
    begin
        writes(tt,"Loading table ProductTable ... ")
        ;;Don't pass rowcount (or set it to 0) to load the full file!
        rowcount = 0
        prodTable.CleanData = true
        prodTable.EmptyAlphaNull = true
        if (prodTable.Load(true,tt,rowcount,failrows)) then
            writes(tt,string(rowcount) + " rows loaded, "+string(failrows)+" failed")
        else
        begin
            writes(tt,prodTable.ErrorMessage)
            clear ok
        end
    end

    prodTable = ^null

    ;--------------------------------------------------------------------------
    ;ProductGroup table

    if (ok)
        prodGrpTable = new ProductGroupTable(db)

    if (ok)
    begin
        writes(tt,"Checking for table ProductGroupTable ... ")
        if (prodGrpTable.Exists())
        begin
            writes(tt,"Deleting table ProductGroupTable ... ")
            if (!prodGrpTable.Drop())
            begin
                writes(tt,prodGrpTable.ErrorMessage)
                clear ok
            end
        end
        if (ok)
        begin
            writes(tt,"Creating table ProductGroupTable ... ")
            if (!prodGrpTable.Create())
            begin
                writes(tt,prodGrpTable.ErrorMessage)
                clear ok
            end
        end
    end

    if (ok)
    begin
        writes(tt,"Loading table ProductGroupTable ... ")
        ;;Don't pass rowcount (or set it to 0) to load the full file!
        rowcount = 0
        prodGrpTable.CleanData = true
        prodGrpTable.EmptyAlphaNull = true
        if (prodGrpTable.Load(true,tt,rowcount,failrows)) then
            writes(tt,string(rowcount) + " rows loaded, "+string(failrows)+" failed")
        else
        begin
            writes(tt,prodGrpTable.ErrorMessage)
            clear ok
        end
    end

    prodGrpTable = ^null

    ;---------------------------------------------------------------------------
    ; Disconnect from the database

    if (connected)
        db.Disconnect()

    ;---------------------------------------------------------------------------
    ;All done

    begin
        data tmpKey, a1
        display(tt,"Press a key: ")
        accept(tt,tmpKey)
    end

    close tt
    stop

endmain
