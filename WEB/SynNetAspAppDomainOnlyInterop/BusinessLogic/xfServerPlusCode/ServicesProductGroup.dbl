;;******************************************************************************
;;WARNING: This file was created by CodeGen. Changes will be lost if regenerated
;;******************************************************************************

import System.Collections
import Synergex.SynergyDE.Select

.include "PRODUCT_GROUP" repository, structure="strProductGroup", end

{xfMethod(interface="Services")}
function CreateProductGroup, METHOD_STATUS
    required in  aProductGroup, strProductGroup
    required out aErrorMessage, string
    endparams
    stack record
        ch, int
        status, METHOD_STATUS
    endrecord
proc
    status = METHOD_STATUS.SUCCESS
    aErrorMessage = ""

    try
    begin
        open(ch=0,u:i,"DAT:groups.ism")
        store(ch,aProductGroup)
    end
    catch (e, @FileNameException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @NoFileFoundException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @DuplicateException)
    begin
        status = METHOD_STATUS.FAIL
        aErrorMessage = "Record already exists!"
    end
    catch (e, @Exception)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = e.Message
    end
    finally
    begin
        if (ch&&chopen(ch))
            close ch
    end
    endtry

    freturn status

endfunction

{xfMethod(interface="Services")}
function ReadAllProductGroups, METHOD_STATUS
    {xfParameter(collectionType=xfCollectType.structure,structure="strProductGroup")}
    required out aProductGroups, @ArrayList
    required out aErrorMessage, string
    endparams
    stack record
        status, METHOD_STATUS
    endrecord
proc

    status = METHOD_STATUS.SUCCESS
    aErrorMessage = ""

    aProductGroups = new ArrayList()

    try
    begin
        data rec, strProductGroup
        foreach rec in new Select(new From("DAT:groups.ism",rec))
            aProductGroups.Add((@strProductGroup)rec)
    end
    catch (e, @FileNameException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @NoFileFoundException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @Exception)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = e.Message
    end
    endtry

    freturn status

endfunction

{xfMethod(interface="Services")}
function ReadProductGroup, METHOD_STATUS
    required in  aGroupId, A20
    required out aProductGroup, strProductGroup
    required out aGrfa, String
    required out aErrorMessage, string
    endparams
    stack record
        ch, int
        status, METHOD_STATUS
        grfa, a10
    endrecord
proc
    status = METHOD_STATUS.SUCCESS
    aErrorMessage = ""

    init aProductGroup
    aProductGroup.group_id = aGroupId

    try
    begin
        open(ch=0,I:I,"DAT:groups.ism")
        read(ch,aProductGroup,%keyval(ch,aProductGroup,0),GETRFA:grfa)
        aGrfa = grfa
    end
    catch (e, @FileNameException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @NoFileFoundException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @EndOfFileException)
    begin
        init aProductGroup
        status = METHOD_STATUS.FAIL
      aErrorMessage = "Record not found"
    end
    catch (e, @KeyNotSameException)
    begin
	init aProductGroup
        status = METHOD_STATUS.FAIL
        aErrorMessage = "Record not found!"
    end
    catch (e, @Exception)
    begin
        init aProductGroup
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = e.Message
    end
    finally
    begin
        if (ch&&chopen(ch))
            close ch
    end
    endtry

    freturn status

endfunction

{xfMethod(interface="Services")}
function UpdateProductGroup, METHOD_STATUS
    required inout aProductGroup, strProductGroup
    required inout aGrfa, String
    required out aErrorMessage, string
    endparams
    stack record
        ch, int
        rec, strProductGroup
        status, METHOD_STATUS
        grfa, a10
    endrecord
proc
    status = METHOD_STATUS.SUCCESS
    aErrorMessage = ""

    try
    begin
        open(ch=0,u:i,"DAT:groups.ism")
        ;;Attempt to read the original record by GRFA to make sure that
        ;;nobody else has modified or deleted it
        grfa=aGrfa
        read(ch,rec,RFA:grfa,GETRFA:grfa)
        write(ch,aProductGroup)
    end
    catch (e, @FileNameException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @NoFileFoundException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (ex, @RecordNotSameException)
    begin
        ;;Failed to lock the original record, it must have been changed
        ;;by another process since this user obtained it. We'll return
        ;;the new record and it's GRFA to the user
        aProductGroup = rec
        aGrfa = grfa
        status = METHOD_STATUS.FAIL
        aErrorMessage = "Record was changed by another user!"
    end
    catch (e, @DuplicateException)
    begin
        status = METHOD_STATUS.FAIL
        aErrorMessage = "Duplicate key error!"
    end
    catch (e, @Exception)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = e.Message
    end
    finally
    begin
        if (ch&&chopen(ch))
            close ch
    end
    endtry

    freturn status

endfunction

{xfMethod(interface="Services")}
function DeleteProductGroup, METHOD_STATUS
    required in aGrfa, String
    required out aErrorMessage, string
    endparams
    stack record
        ch, int
        rec, strProductGroup
        status, METHOD_STATUS
        grfa, a10
    endrecord
proc
    status = METHOD_STATUS.SUCCESS
    aErrorMessage = ""

    try
    begin
        open(ch=0,u:i,"DAT:groups.ism")
        ;;Attempt to read the original record by GRFA to make sure that
        ;;nobody else has modified or deleted it
        grfa=aGrfa
        read(ch,rec,RFA:grfa)
        delete(ch)
    end
    catch (e, @FileNameException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @NoFileFoundException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (ex, @RecordNotSameException)
    begin
        status = METHOD_STATUS.FAIL
        aErrorMessage = "The record has been changed by another user!"
    end
    catch (e, @Exception)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = e.Message
    end
    finally
    begin
        if (ch&&chopen(ch))
            close ch
    end
    endtry

    freturn status

endfunction

{xfMethod(interface="Services")}
function ProductGroupExists, METHOD_STATUS
    required in  aGroupId, A20
    required out aErrorMessage, string
    endparams
    stack record
        ch, int
        rec, strProductGroup
        status, METHOD_STATUS
    endrecord
proc
    status = METHOD_STATUS.SUCCESS
    aErrorMessage = ""

    init rec
    rec.group_id = aGroupId

    try
    begin
        open(ch=0,I:I,"DAT:groups.ism")
        find(ch,,%keyval(ch,rec,0))
    end
    catch (e, @FileNameException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @NoFileFoundException)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = "File not found! CHECK THE DAT SETTING IN THE WEB.CONFIG FILE AND MAKE SURE IT IS CORRECT FOR YOUR SYSTEM!"
    end
    catch (e, @EndOfFileException)
    begin
        status = METHOD_STATUS.FAIL
        aErrorMessage = "Record not found!"
    end
    catch (e, @KeyNotSameException)
    begin
        status = METHOD_STATUS.FAIL
        aErrorMessage = "Record not found!"
    end
    catch (e, @Exception)
    begin
        status = METHOD_STATUS.FATAL_ERROR
        aErrorMessage = e.Message
    end
    finally
    begin
        if (ch&&chopen(ch))
            close ch
    end
    endtry

    freturn status

endfunction
