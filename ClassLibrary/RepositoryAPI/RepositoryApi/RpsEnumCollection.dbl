;;*****************************************************************************
;;
;; Class:		SynPsg.Rps.RpsEnumCollection
;;
;; Description:	Represents a collection of repository enumeration definitions
;;
;; Author:		Steve Ives, Synergex Professional Services Group
;;
;; Date: 	    2nd November 2009
;;
;;*****************************************************************************
;;
;; This code is supplied as seen and without warranty or support, and is used
;; at your own risk. Neither the author or Synergex accept any responsability
;; for any loss or damage which may result from the use of this code.
;;
;;*****************************************************************************
;;
;; $Revision: 6 $
;;
;; $Date: 2011-06-09 16:05:17-07:00 $
;;
;;*****************************************************************************
;
.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import SynPsg.Rps
import System.Collections.Generic

namespace SynPsg.Rps

	public class RpsEnumCollection extends List<RpsEnum>
		
		.region "Constructors and destructors"

		;;Constructor (all enumerations)
		public method RpsEnumCollection
			endparams
			parent()
		proc
			Repository.CheckIsOpen()
			LoadAllEnumerations()
		endmethod
		
		;;Constructor (enumerations used by a structures fields)
		public method RpsEnumCollection
			required in StructureName, String
			endparams
			parent()
		proc
			Repository.CheckIsOpen()
			LoadStructureEnumerations(StructureName.Trim().ToUpper())
		endmethod

		.endregion

		.region "Private methods"

		private method LoadAllEnumerations, void
			endparams
			record local_data
				MemHandle, int
				EnumCount, int
				ix, int
			endrecord
		proc
			init local_data
			try 
			begin
				;;Get the number of enumerations in the repository
				dd_name(Repository.RpsControl,DDN_COUNT,DDN_ENUM,EnumCount)
				if (Repository.RpsControl.error)
					throw new RpsEnumException("Failed to get repository enumeration count")
				;;Do we have any enumerations to load?
				if (EnumCount) 
				begin
					;;Allocate enumeration name memory and get enum names
					MemHandle = %mem_proc(DM_ALLOC,^size(strIdentifier)*EnumCount)
					dd_name(Repository.RpsControl,DDN_LIST,DDN_ENUM,EnumCount,^m(strIdentifier,MemHandle))
					if (Repository.RpsControl.error)
						throw new RpsEnumException("Failed to get repository enumeration names")
					for ix from 1 thru EnumCount
						this.Add(new RpsEnum(^m(strIdentifier[ix],MemHandle)))
				end
			end
			finally
			begin
				;;Free enumeration names array
				if (MemHandle) 
                    MemHandle = %mem_proc(DM_FREE,MemHandle)
			end
			endtry
		endmethod

		;; Load all enumerations
		private method LoadStructureEnumerations, void
			required in StructureName, String
			endparams
			record 
				str ,@RpsStructure
				fld	,@RpsField
			endrecord
		proc
			str = new RpsStructure(StructureName)			
			foreach fld in str.Fields
			begin
				if (fld.EnumName)
				begin
					data enm, @RpsEnum
					data done, boolean, false
					;;Look for the enum in our existing collection
					foreach enm in this
					begin
						if (enm.Name==fld.EnumName)
						begin
							done = true
							exitloop
						end
					end
					;;Skip it if we already have it
					if (done)
						nextloop
					;;Add to collection
					this.Add(new RpsEnum(fld.EnumName))
				end
			end
		endmethod

		.endregion

	endclass

endnamespace
